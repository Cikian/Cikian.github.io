<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java异常&amp;处理异常</title>
      <link href="/2022/10/20/java-guan-yu-yi-chang-de-fen-xi/"/>
      <url>/2022/10/20/java-guan-yu-yi-chang-de-fen-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="Java异常-amp-处理异常"><a href="#Java异常-amp-处理异常" class="headerlink" title="Java异常&amp;处理异常"></a>Java异常&amp;处理异常</h1><h2 id="一、什么是异常"><a href="#一、什么是异常" class="headerlink" title="一、什么是异常"></a>一、什么是异常</h2><p>在Java程序运行时，会发生意料之外的情况，这种情况被称为例外或者异常，异常的出现，往往会中断程序的运行。在Java中，异常也是一个对象，当程序发生异常时，就会出现一个异常对象，其中包括异常类型、异常信息、异常原因等信息。</p><p>举个例子：当你穿上鞋，走路时发现左右脚穿反了，这时候，就是发生了异常，当然，这个异常不是致命的，你可以选择继续这样穿下去，继续走路，但是这样可能会引发其他严重的后果。大多数时候，我们会中断当前的事情，脱下鞋子，换过来。</p><h2 id="二、异常分类"><a href="#二、异常分类" class="headerlink" title="二、异常分类"></a>二、异常分类</h2><h3 id="1-编译时异常"><a href="#1-编译时异常" class="headerlink" title="1. 编译时异常"></a>1. 编译时异常</h3><p>当我们编写Java代码时，编译器会对代码进行检查，如果有异常则不能通过编译，所以此类异常一旦出现，就必须处理。</p><h3 id="2-运行时异常"><a href="#2-运行时异常" class="headerlink" title="2. 运行时异常"></a>2. 运行时异常</h3><p>运行时异常，即编译时不会报错，在运行时发生的异常。此类异常不强制处理，但是就像上面举的“穿鞋”的例子，假如不处理，可能会引发其他更严重的错误。</p><h2 id="三、-处理办法"><a href="#三、-处理办法" class="headerlink" title="三、 处理办法"></a>三、 处理办法</h2><p>无论是编译时异常还是运行时异常，理论上都需要我们去处理，假如不处理异常，JVM的默认处理办法是，在异常发生的位置终止程序，然后输出异常的信息。</p><h3 id="1-throws"><a href="#1-throws" class="headerlink" title="1. throws"></a>1. throws</h3><p>使用 <code>throws</code> 抛出异常，由JVM处理，即以默认方式处理异常：在出现异常的位置终止异常；</p><h3 id="2-thy…catch…"><a href="#2-thy…catch…" class="headerlink" title="2. thy…catch…"></a>2. thy…catch…</h3><p>使用 <code>try...catch.. </code> 环绕：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">try</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 出现异常的代码</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span>异常类<span class="token number">1</span> 异常对象<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 处理异常</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span>异常类<span class="token number">2</span> 异常对象<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 处理异常</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">final</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// </span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>将出现或者可能出现异常的代码放在 <code>try</code> 后面的大括号中，在下方的 <code>catch</code> 的小括号中，即catch的参数为一个异常对象，在之后的大括号中，则是出现此类异常时的处理方法。</p><p><code>try...catch...</code> 这里有些类似与 <code>if...else...</code> 语句，<code>try</code> 后面的代买可以看作 <code>if</code> 语句的条件，如果发生异常，则到下方寻找对应的异常类型，执行对应的处理办法：</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 类比成下列代码</span><span class="token keyword">if</span><span class="token punctuation">(</span>发生了异常类型<span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 处理办法1</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>发生了异常类型<span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 处理办法2</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>发生了异常类型<span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 处理办法3</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code></pre><h3 id="3-二者结合"><a href="#3-二者结合" class="headerlink" title="3. 二者结合"></a>3. 二者结合</h3><p><code>throws</code> 和 <code>try...catch...</code> 配合使用：</p><p>在可能出现异常的方法名后使用 <code>throws</code> 抛出异常，在此方法处不处理异常，调用者在调用此方法时，需要集中捕获处理异常</p><p><strong>如：</strong></p><pre class=" language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Fun</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> RuntimeException <span class="token punctuation">{</span>        <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">5</span> <span class="token operator">/</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>        Fun fun <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            fun<span class="token punctuation">.</span><span class="token function">fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RuntimeException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"处理异常！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>在上面的例子中，Fun 类并未处理异常，而是使用 <code>throws</code> 将异常抛出，而在下方调用时，则需要使用 <code>try...catch...</code> 环绕，捕获处理异常。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用命令及参数（持续更新）</title>
      <link href="/2022/10/17/linux-chang-yong-ming-ling-ji-can-shu/"/>
      <url>/2022/10/17/linux-chang-yong-ming-ling-ji-can-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="一、磁盘操作"><a href="#一、磁盘操作" class="headerlink" title="一、磁盘操作"></a>一、磁盘操作</h2><h3 id="1-ls命令"><a href="#1-ls命令" class="headerlink" title="1. ls命令"></a>1. ls命令</h3><p>“ls”即 list 的缩写，通过 ls 命令可以查看 linux 目录下包含的文件，以及查看文件权限(包括目录、文件夹、文件权限)、查看目录信息等。</p><p><strong>常用参数：</strong></p><blockquote><p><strong>-a</strong> 列出目录所有文件，包含以.开始的隐藏文件<br><strong>-A</strong> 列出除.及..的其它文件<br><strong>-r</strong> 反序排列<br><strong>-t</strong> 以文件修改时间排序<br><strong>-S</strong> 以文件大小排序<br><strong>-h</strong> 以易读大小显示<br><strong>-l</strong>  除了文件名之外，还将文件的权限、所有者、文件大小等信息详细列出来</p></blockquote><p><strong>应用：</strong></p><ol><li><p>按大小反序显示文件详细信息</p><p><code>ls -lrS</code></p></li><li><p>列出当前目录中所有以”t”开头的目录的详细内容</p><p><code>ls -l t*</code></p></li></ol><h3 id="2-cd命令"><a href="#2-cd命令" class="headerlink" title="2. cd命令"></a>2. cd命令</h3><p>“cd”为changeDirectory的缩写，即切换目录。</p><p><strong>语法：</strong> <code>cd [目录名]</code></p><p><strong>应用：</strong></p><ol><li><p>进入根目录</p><p><code>cd /</code></p></li><li><p>进入根目录下的bin目录</p><p><code>cd /bin</code></p></li></ol><h3 id="3-pwd命令"><a href="#3-pwd命令" class="headerlink" title="3. pwd命令"></a>3. pwd命令</h3><p>pwd命令用于查看当前工作目录</p><p><strong>语法：</strong> <code>pwd</code></p><h3 id="4-mkdir命令"><a href="#4-mkdir命令" class="headerlink" title="4. mkdir命令"></a>4. mkdir命令</h3><p>mkdir命令用于创建目录</p><p><strong>常用参数：</strong></p><blockquote><p><strong>-m</strong> 对新建目录设置存取权限，也可以用 ”chmod“ 命令设置;</p><p><strong>-p</strong>   可以是一个路径名称。此时若路径中的某些目录尚不存在,加上此选项后，系统将自动建立好那些尚不在的目录，即一次可以建立多个目录</p></blockquote><p><strong>应用：</strong></p><ol><li><p>当前工作目录下创建名为abc的文件夹</p><p><code>mkdir abc</code></p></li><li><p>在 tmp 目录下创建路径为 a&#x2F;b&#x2F;c 的目录，若不存在，则创建</p><p><code>mkdir -p /tmp/a/b/c</code></p></li></ol><h3 id="5-rmdir命令"><a href="#5-rmdir命令" class="headerlink" title="5. rmdir命令"></a>5. rmdir命令</h3><p>rmdir命令的作用是从一个目录中删除一个或多个子目录项，删除某目录时必须具有对其父目录的写权限。</p><p><strong>常用参数：</strong></p><blockquote><p><strong>-p</strong> 当前目录删除后若其父目录成为空目录，则将其父目录一起删除</p></blockquote><p><strong>应用：</strong></p><ol><li><p>在 aaa 目录下，删除名为 bbb 的子目录，若删除 bbb 后，aaa 成为空目录，则 将aaa 一并删除。</p><p><code>rmdir -p aaa/bbb</code></p></li></ol><h2 id="二、文件操作"><a href="#二、文件操作" class="headerlink" title="二、文件操作"></a>二、文件操作</h2><h3 id="1-cat命令"><a href="#1-cat命令" class="headerlink" title="1. cat命令"></a>1. cat命令</h3><p>cat命令用于连接文件并打印到标准输出设备上</p><p><strong>常用参数：</strong></p><blockquote><p><strong>-n 或 –number</strong>：由 1 开始对所有输出的行数编号。</p><p><strong>-b 或 –number-nonblank</strong>：和 -n 相似，只不过对于空白行不编号。</p><p><strong>-s 或 –squeeze-blank</strong>：当遇到有连续两行以上的空白行，就代换为一行的空白行。</p><p><strong>-v 或 –show-nonprinting</strong>：使用 ^ 和 M- 符号，除了 LFD 和 TAB 之外。</p><p><strong>-E 或 –show-ends</strong> : 在每行结束处显示 $。</p><p><strong>-T 或 –show-tabs</strong>: 将 TAB 字符显示为 ^I。</p><p><strong>-A, –show-all</strong>：等价于 -vET。</p><p><strong>-e：</strong>等价于”-vE”选项；</p><p><strong>-t：</strong>等价于”-vT”选项；</p></blockquote><p><strong>应用：</strong></p><ol><li><p>把 file1 的文档内容加上行号后输入 file2 这个文档里</p><p><code>cat -n file1 &gt; file2</code></p></li><li><p>清空 &#x2F;etc&#x2F;file.txt 文档内容</p><p><code>cat /dev/null &gt; /etc/file.txt</code></p></li></ol><h3 id="2-more命令"><a href="#2-more命令" class="headerlink" title="2. more命令"></a>2. more命令</h3><p>more 命令类似 cat ，不过会以一页一页的形式显示，更方便阅读，而最基本的指令就是按空格键（space）就往下一页显示，按 b 键就会往回（back）一页显示，而且还有搜寻字串的功能（与 vi 相似） 。</p><p><strong>常用参数：</strong></p><blockquote><p><strong>-num：</strong> 一次显示的行数</p><p><strong>-d：</strong> 提示使用者，在画面下方显示 [Press space to continue, ‘q’ to quit.] ，如果使用者按错键，则会显示 [Press ‘h’ for instructions.] 而不是 ‘哔’ 声</p><p><strong>-l：</strong> 取消遇见特殊字元 ^L（送纸字元）时会暂停的功能</p><p><strong>-f：</strong> 计算行数时，以实际上的行数，而非自动换行过后的行数（有些单行字数太长的会被扩展为两行或两行以上）</p><p><strong>-p：</strong> 不以卷动的方式显示每一页，而是先清除萤幕后再显示内容</p><p><strong>-c：</strong> 跟 -p 相似，不同的是先显示内容再清除其他旧资料</p><p><strong>-s：</strong> 当遇到有连续两行以上的空白行，就代换为一行的空白行</p><p><strong>-u：</strong> 不显示下引号 （根据环境变数 TERM 指定的 terminal 而有所不同）</p><p><strong>+&#x2F;pattern：</strong> 在每个文档显示前搜寻该字串（pattern），然后从该字串之后开始显示</p><p><strong>+num ：</strong>从第 num 行开始显示</p><p><strong>fileNames：</strong> 欲显示内容的文档，可为复数个数</p></blockquote><h3 id="3-less命令"><a href="#3-less命令" class="headerlink" title="3. less命令"></a>3. less命令</h3><p>less 与 more 类似，less 可以随意浏览文件，支持翻页和搜索，支持向上翻页和向下翻页。</p><p><strong>常用参数：</strong></p><blockquote><p><strong>-b：</strong> &lt;缓冲区大小&gt; 设置缓冲区的大小</p><p><strong>-e：</strong> 当文件显示结束后，自动离开</p><p><strong>-f ：</strong>强迫打开特殊文件，例如外围设备代号、目录和二进制文件</p><p>**-g： **只标志最后搜索的关键词</p><p><strong>-i：</strong> 忽略搜索时的大小写</p><p><strong>-m：</strong> 显示类似more命令的百分比</p><p><strong>-N：</strong> 显示每行的行号</p><p><strong>-o：</strong> &lt;文件名&gt; 将less 输出的内容在指定文件中保存起来</p><p><strong>-Q：</strong> 不使用警告音</p><p><strong>-s：</strong> 显示连续空行为一行</p><p><strong>-S：</strong> 行过长时间将超出部分舍弃</p><p><strong>-x：</strong> &lt;数字&gt; 将”tab”键显示为规定的数字空格</p><p><strong>&#x2F;字符串：</strong>向下搜索”字符串”的功能</p><p><strong>?字符串：</strong>向上搜索”字符串”的功能</p><p><strong>n：</strong>重复前一个搜索（与 &#x2F; 或 ? 有关）</p><p><strong>N：</strong>反向重复前一个搜索（与 &#x2F; 或 ? 有关）</p><blockquote><p><strong>控制方法：</strong></p></blockquote><blockquote><p><strong>b ：</strong>向上翻一页</p><p><strong>d ：</strong>向后翻半页</p><p><strong>h ：</strong>显示帮助界面</p><p><strong>Q ：</strong>退出less 命令</p><p><strong>u ：</strong>向前滚动半页</p><p><strong>y ：</strong>向前滚动一行</p><p><strong>空格键：</strong> 滚动一页</p><p><strong>回车键：</strong> 滚动一行</p><p><strong>[pagedown]：</strong> 向下翻动一页</p><p><strong>[pageup]：</strong> 向上翻动一页</p></blockquote></blockquote><h3 id="4-chattr命令"><a href="#4-chattr命令" class="headerlink" title="4. chattr命令"></a>4. chattr命令</h3><p>chattr命令用于改变文件属性。</p><p>这项指令可改变存放在ext2文件系统上的文件或目录属性，这些属性共有以下8种模式：</p><p>a：让文件或目录仅供附加用途。</p><p>b：不更新文件或目录的最后存取时间。</p><p>c：将文件或目录压缩后存放。</p><p>d：将文件或目录排除在倾倒操作之外。</p><p>i：不得任意更动文件或目录。</p><p>s：保密性删除文件或目录。</p><p>S：即时更新文件或目录。</p><p>u：预防意外删除。</p><p><strong>语法：</strong></p><p><code>chattr [-RV][-v&lt;版本编号&gt;][+/-/=&lt;属性&gt;][文件或目录...]</code></p><p><strong>常用参数：</strong></p><blockquote><p><strong>-R：</strong> 递归处理，将指定目录下的所有文件及子目录一并处理。</p><p><strong>-v：</strong> &lt;版本编号&gt; 设置文件或目录版本。</p><p><strong>-V：</strong> 显示指令执行过程。</p><p><strong>+&lt;属性&gt;：</strong> 开启文件或目录的该项属性。</p><p><strong>-&lt;属性&gt;：</strong> 关闭文件或目录的该项属性。</p><p><strong>&#x3D;&lt;属性&gt;：</strong> 指定文件或目录的该项属性。</p></blockquote><h3 id="5-mv命令"><a href="#5-mv命令" class="headerlink" title="5. mv命令"></a>5. mv命令</h3><p>mv（英文全拼：move file）命令用来为文件或目录改名、或将文件或目录移入其它位置。</p><p><strong>常用参数：</strong></p><blockquote><p><strong>-b：</strong> 当目标文件或目录存在时，在执行覆盖前，会为其创建一个备份。</p><p><strong>-i：</strong> 如果指定移动的源目录或文件与目标的目录或文件同名，则会先询问是否覆盖旧文件，输入 y 表示直接覆盖，输入 n 表示取消该操作。</p><p><strong>-f：</strong> 如果指定移动的源目录或文件与目标的目录或文件同名，不会询问，直接覆盖旧文件。</p><p><strong>-n：</strong> 不要覆盖任何已存在的文件或目录。</p><p><strong>-u：</strong>当源文件比目标文件新或者目标文件不存在时，才执行移动操作。</p></blockquote><table><thead><tr><th align="center">命令格式</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">mv source_file(源文件) dest_file(目标文件)</td><td align="center">将源文件名 source_file 改为目标文件名 dest_file</td></tr><tr><td align="center">mv source_file(源文件) dest_directory(目标目录)</td><td align="center">将源文件 source_file 移动到目标目录 dest_directory 中</td></tr><tr><td align="center">mv source_directory(源目录) dest_directory(目标目录)</td><td align="center">若目标目录 dest_directory 已存在，将 source_directory 移动到目标目录 dest_directory 中；若目标目录 dest_directory 不存在则将源目录名 source_directory 改名为目标目录名 dest_directory</td></tr></tbody></table><p><strong>应用：</strong></p><ol><li><p>将文件 aaa 改名为 bbb </p><p><code>mv aaa bbb</code></p></li><li><p>将 aaa目录放入 bbb 目录中。如果 bbb目录不存在，则该命令将 aaa改名为 bbb</p><p><code>mv aaa/ bbb </code></p></li></ol><h3 id="6-rm命令"><a href="#6-rm命令" class="headerlink" title="6. rm命令"></a>6. rm命令</h3><p>”rm“是remove的缩写，作用是删除一个目录中的一个或多个文件或目录。</p><p><strong>常用参数：</strong></p><blockquote><p><strong>-f</strong> 强制删除（force），和 -i 选项相反，使用 -f，系统将不再询问，而是直接删除目标文件或目录。</p><p><strong>-i</strong> 和 -f 正好相反，在删除文件或目录之前，系统会给出提示信息，使用 -i 可以有效防止不小心删除有用的文件或目录。</p><p><strong>-r</strong> 递归删除，主要用于删除目录，可删除指定目录及包含的所有内容，包括所有的子目录和文件。</p><p><strong>-d</strong> 用于删除目录</p></blockquote><p><strong>应用：</strong></p><ol><li><p>删除任何 .log 文件，删除前逐一询问确认</p><p><code>rm -i *.log</code></p></li><li><p>强制删除 abc 子目录及子目录中所有档案删除，删除前不询问</p><p><code>rm -rf abc</code></p></li></ol><h3 id="7-cp命令"><a href="#7-cp命令" class="headerlink" title="7. cp命令"></a>7. cp命令</h3><p>cp（英文：copy file）命令主要用于复制文件或目录。</p><p><strong>常用参数：</strong></p><blockquote><p><strong>-a：</strong>此选项通常在复制目录时使用，它保留链接、文件属性，并复制目录下的所有内容。其作用等于dpR参数组合。</p><p><strong>-d：</strong>复制时保留链接。这里所说的链接相当于 Windows 系统中的快捷方式。</p><p><strong>-f：</strong>覆盖已经存在的目标文件而不给出提示。</p><p><strong>-i：</strong>与 <strong>-f</strong> 选项相反，在覆盖目标文件之前给出提示，要求用户确认是否覆盖，回答 <strong>y</strong> 时目标文件将被覆盖。</p><p><strong>-p：</strong>除复制文件的内容外，还把修改时间和访问权限也复制到新文件中。</p><p><strong>-r：</strong>若给出的源文件是一个目录文件，此时将复制该目录下所有的子目录和文件。</p><p><strong>-l：</strong>不复制文件，只是生成链接文件。</p></blockquote><p><strong>应用：</strong></p><ol><li><p>将目录 根目录下的aaa目录下的所有文件复制&#x2F;root目录bbb下</p><p><code>cp –r /aaa/ /root/bbb</code></p></li></ol><h2 id="三、压缩-x2F-解压缩操作"><a href="#三、压缩-x2F-解压缩操作" class="headerlink" title="三、压缩 &#x2F; 解压缩操作"></a>三、压缩 &#x2F; 解压缩操作</h2><h3 id="1-tar命令"><a href="#1-tar命令" class="headerlink" title="1. tar命令"></a>1. tar命令</h3><p>tar（英文全拼：tape archive ）命令用于备份文件，tar 是用来建立，还原压缩文件的工具程序，它可以加入，解压压缩文件内的文件。</p><p><strong>常用参数：</strong></p><blockquote><p><strong>-A：</strong> 新增文件到已存在的备份文件。</p><p><strong>-c：</strong> 建立新的备份文件。</p><p><strong>-C&lt;目的目录&gt;：</strong> 切换到指定的目录。</p><p><strong>-d：</strong> 对比备份文件内和文件系统上的文件的差异。</p><p><strong>-f&lt;备份文件&gt;：</strong> 指定备份文件。</p><p><strong>-h：</strong> 不建立符号连接，直接复制该连接所指向的原始文件。</p><p><strong>-k：</strong> 解开备份文件时，不覆盖已有的文件。</p><p><strong>-l：</strong> 复制的文件或目录存放的文件系统，必须与tar指令执行时所处的文件系统相同，否则不予复制。</p><p><strong>-m：</strong> 还原文件时，不变更文件的更改时间。</p><p><strong>-p：</strong> 用原来的文件权限还原文件。</p><p><strong>-P：</strong> 文件名使用绝对名称，不移除文件名称前的”&#x2F;“号。</p><p><strong>-r：</strong> 新增文件到已存在的备份文件的结尾部分。</p><p><strong>-t：</strong> 列出备份文件的内容。</p><p><strong>-v：</strong> 显示指令执行过程。</p><p><strong>-w：</strong> 遭遇问题时先询问用户。</p><p><strong>-W：</strong> 写入备份文件后，确认文件正确无误。</p><p><strong>-x：</strong> 从备份文件中还原文件。</p><p><strong>-z：</strong> 通过gzip指令处理备份文件。</p><p><strong>-Z：</strong> 通过compress指令处理备份文件。</p></blockquote><p><strong>应用：</strong></p><ol><li><p>压缩aaa.file文件为aaa.tar.gz</p><p><code>tar -zcvf aaa.tar.gz aaa.file</code></p></li><li><p>列出压缩文件aaa.tar.gz中的内容</p><p><code>tar -tzvf aaa.tar.gz</code></p></li><li><p>解压aaa.tar.gz文件</p><p><code>tar -zxvf aaa.tar.gz</code></p></li></ol><h3 id="2-zip命令"><a href="#2-zip命令" class="headerlink" title="2. zip命令"></a>2. zip命令</h3><p>zip 命令用于压缩文件，压缩后的文件后缀名为 <strong>.zip</strong></p><p><strong>常用参数：</strong></p><blockquote><p><strong>-A：</strong> 调整可执行的自动解压缩文件。</p><p><strong>-b&lt;工作目录&gt;：</strong> 指定暂时存放文件的目录。</p><p><strong>-c：</strong> 替每个被压缩的文件加上注释。</p><p><strong>-d：</strong> 从压缩文件内删除指定的文件。</p><p><strong>-D：</strong> 压缩文件内不建立目录名称。</p><p><strong>-f：</strong> 更新现有的文件。</p><p><strong>-F：</strong> 尝试修复已损坏的压缩文件。</p><p><strong>-g：</strong> 将文件压缩后附加在既有的压缩文件之后，而非另行建立新的压缩文件。</p><p><strong>-i&lt;范本样式&gt;：</strong> 只压缩符合条件的文件。</p><p><strong>-j：</strong> 只保存文件名称及其内容，而不存放任何目录名称。</p><p><strong>-J：</strong> 删除压缩文件前面不必要的数据。</p><p><strong>-m：</strong> 将文件压缩并加入压缩文件后，删除原始文件，即把文件移到压缩文件中。</p><p><strong>-n&lt;字尾字符串&gt;：</strong> 不压缩具有特定字尾字符串的文件。</p><p><strong>-o：</strong> 以压缩文件内拥有最新更改时间的文件为准，将压缩文件的更改时间设成和该文件相同。</p><p><strong>-q：</strong> 不显示指令执行过程。</p><p><strong>-r：</strong> 递归处理，将指定目录下的所有文件和子目录一并处理。</p><p><strong>-T：</strong> 检查备份文件内的每个文件是否正确无误。</p><p><strong>-u：</strong> 与 <strong>-f</strong> 参数类似，但是除了更新现有的文件外，也会将压缩文件中的其他文件解压缩到目录中。</p><p><strong>-v：</strong> 显示指令执行过程或显示版本信息。</p><p><strong>-x&lt;范本样式&gt;：</strong> 压缩时排除符合条件的文件。</p><p><strong>-X：</strong> 不保存额外的文件属性。</p><p><strong>-z：</strong> 替压缩文件加上注释。</p></blockquote><p><strong>应用：</strong></p><ol><li><p>将 &#x2F;root&#x2F;aaa&#x2F; 这个目录下所有文件和文件夹打包为当前目录下的 aaa.zip</p><p><code>zip -q -r aaa.zip /root/aaa</code></p></li><li><p>从压缩文件 aaa.zip 中删除文件 aaa.file</p><p><code>zip -dv aaa.zip aaa.file</code></p></li></ol><h3 id="3-unzip命令"><a href="#3-unzip命令" class="headerlink" title="3. unzip命令"></a>3. unzip命令</h3><p>unzip命令用于解压缩zip文件，unzip是.zip压缩文件的解压缩程序。</p><p><strong>常用参数：</strong></p><blockquote><p><strong>-c：</strong> 将解压缩的结果显示到屏幕上，并对字符做适当的转换。</p><p><strong>-f：</strong> 更新现有的文件。</p><p><strong>-l：</strong> 显示压缩文件内所包含的文件。</p><p><strong>-p：</strong> 与**-c**参数类似，会将解压缩的结果显示到屏幕上，但不会执行任何的转换。</p><p><strong>-t：</strong> 检查压缩文件是否正确。</p><p><strong>-u：</strong> 与**-f**参数类似，但是除了更新现有的文件外，也会将压缩文件中的其他文件解压缩到目录中。</p><p><strong>-v：</strong> 执行时显示详细的信息。</p><p><strong>-z：</strong> 仅显示压缩文件的备注文字。</p><p><strong>-a：</strong> 对文本文件进行必要的字符转换。</p><p><strong>-b：</strong> 不要对文本文件进行字符转换。</p><p><strong>-C：</strong> 压缩文件中的文件名称区分大小写。</p><p><strong>-j：</strong> 不处理压缩文件中原有的目录路径。</p><p><strong>-L：</strong> 将压缩文件中的全部文件名改为小写。</p><p><strong>-n：</strong> 解压缩时不要覆盖原有的文件。</p><p><strong>-o：</strong> 不必先询问用户，unzip执行后覆盖原有文件。</p><p><strong>-P&lt;密码&gt;：</strong> 使用zip的密码选项。</p><p><strong>-q：</strong> 执行时不显示任何信息。</p><p><strong>-s：</strong> 将文件名中的空白字符转换为底线字符。</p><p><strong>-d&lt;目录&gt;：</strong> 指定文件解压缩后所要存储的目录。</p><p><strong>-x&lt;文件&gt;：</strong> 指定不要处理.zip压缩文件中的哪些文件。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Ubuntu更新Snap Store失败</title>
      <link href="/2022/07/29/ubuntu-geng-xin-snap-store-shi-bai/"/>
      <url>/2022/07/29/ubuntu-geng-xin-snap-store-shi-bai/</url>
      
        <content type="html"><![CDATA[<h1 id="Ubuntu更新Snap-Store失败"><a href="#Ubuntu更新Snap-Store失败" class="headerlink" title="Ubuntu更新Snap Store失败"></a>Ubuntu更新Snap Store失败</h1><h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><p><img src="https://img-upyun.cikian.cn/blog-img/2022-7/XNqh12t5zoV6Z9C.png"></p><p>这个问题出现的原因很简单：Snap Store无法自己更新自己</p><p>很容易理解，举个不恰当的例子，某个手机应用更新时，是无法运行这个应用的</p><p>解决办法也很简单，既然他自己不能更新他自己，那就使用命令行帮他更新</p><p>直接命令行输入 <code>sudo snap refresh snap-store</code></p><p>如果出现下面报错：</p><p><img src="https://img-upyun.cikian.cn/blog-img/2022-7/20220728233238.png"></p><p>这个是因为当前Snap Store正在运行，可以看到，当前的进程号是 <code>1701</code> ，只需要 在终端输入 <code>kill 1701</code> 就好啦</p><p>然后再执行 <code>sudo snap refresh snap-store</code> </p><p><img src="https://img-upyun.cikian.cn/blog-img/2022-7/20220729000020.png"></p><p>更新成功啦</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>终端输入 <code>sudo snap refresh snap-store</code> </li><li>若显示“正在运行”，<code>kill 进程号</code></li><li>再次执行 <code>sudo snap refresh snap-store</code></li></ol><hr></br></br></br></br></br></br><div style="background-image:linear-gradient(to right, #9be8fe 0%, #c382f9 100%); padding: 15px 20px; border-radius:30px; color: #fff; text-align: center; font-size:20px;">    <span style="font-size:30px; color: #fff; font-weight:bolder;">声明</span>    </br>    我的博客即将同步至腾讯云开发者社区，邀请大家一同入驻：<a style="color: #42b983;" href = https://cloud.tencent.com/developer/support-plan?invite_code=gbenipl6on2v>https://cloud.tencent.com/developer/support-plan?invite_code=gbenipl6on2v</a></div></br></br></br></br></br></br>]]></content>
      
      
      <categories>
          
          <category> 问题解决 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题解决 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中Random库函数用法</title>
      <link href="/2022/07/04/python-zhong-random-ku-han-shu-yong-fa/"/>
      <url>/2022/07/04/python-zhong-random-ku-han-shu-yong-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="一、使用Random库"><a href="#一、使用Random库" class="headerlink" title="一、使用Random库"></a>一、使用Random库</h2><p><code>import Random</code></p><p>Random库是Python的标准库，所以安装了python环境，正常情况下就可以使用Random库。</p><h2 id="二、常用函数"><a href="#二、常用函数" class="headerlink" title="二、常用函数"></a>二、常用函数</h2><table><thead><tr><th align="center">序号</th><th align="center">函数</th><th align="center">含义</th><th align="center">用法</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">random.seed([x])</td><td align="center">改变随机数生成器的种子</td><td align="center">x为种子，可为整形或浮点型，默认为当期系统时间</td><td align="center"></td></tr><tr><td align="center">2</td><td align="center">random.random( )</td><td align="center">返回[0,1)之间的一个随机浮点数</td><td align="center"></td><td align="center">可返回0，不会返回1</td></tr><tr><td align="center">3</td><td align="center">random.randint(a, b)</td><td align="center">返回[a, b]之间的一个随机整数</td><td align="center">a, b需使用整数</td><td align="center">可返回a和b</td></tr><tr><td align="center">4</td><td align="center">random.randrange(a, b, [c])</td><td align="center">返回[a, b)之间以c为步长的一个随机整数</td><td align="center">a, b, c需为整数，c默认为1</td><td align="center">可返回a，不会返回b</td></tr><tr><td align="center">5</td><td align="center">random.getrandbits(x)</td><td align="center">返回一个x比特长的一个随机整数</td><td align="center">x需为整数</td><td align="center">x表示二进制的位数，返回值是一个<strong>0到2^x-1</strong>范围内的一个随机数，包括0和2^x-1</td></tr><tr><td align="center">6</td><td align="center">random.uniform(a, b)</td><td align="center">返回[a, b)之间的一个随机浮点数</td><td align="center">a, b可为整形或浮点型</td><td align="center">可返回a，不会返回b</td></tr><tr><td align="center">7</td><td align="center">random.choice(seq)</td><td align="center">返回一个列表、元组或字符串中的一个随机项。</td><td align="center">seq为字符串、列表或元组</td><td align="center"></td></tr><tr><td align="center">8</td><td align="center">random.sample(seq, n)</td><td align="center">返回n个列表、元组或字符串中的随机项。</td><td align="center">seq为字符串、列表或元组，n为整数</td><td align="center">返回值为列表</td></tr><tr><td align="center">9</td><td align="center">random.shuffle(list)</td><td align="center">将序列的所有元素随机排序。</td><td align="center">list为一个列表</td><td align="center">无返回值</td></tr></tbody></table><h2 id="三、示例"><a href="#三、示例" class="headerlink" title="三、示例"></a>三、示例</h2><ol><li><p><strong>random.seed([x])</strong></p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> randomrandom<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>当种子传入固定的值后，每次返回的随机数会是一个固定值，<strong>注意：这里的“每次”要理解为“每次执行程序，而不是每次执行语句”，</strong>比如上面示例中的代码执行后输出结果：</p><pre class=" language-python"><code class="language-python"><span class="token number">0.13436424411240122</span><span class="token number">0.8474337369372327</span><span class="token number">0.763774618976614</span></code></pre><p>当再次执行程序时，返回的结果依然是上面的结果。</p></li><li><p><strong>random.random( )</strong></p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> random<span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></li><li><p><strong>random.randint(a, b)</strong></p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 在[1, 10]之间随机返回一个数</span><span class="token keyword">import</span> random<span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></li><li><p><strong>random.randrange(a, b, [c])</strong></p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 在[0, 101)之间随机返回一个偶数</span><span class="token keyword">import</span> random<span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>randrange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></li><li><p><strong>random.getrandbits(x)</strong></p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 在[000(B), 111(B)]之间随机返回一个数</span><span class="token keyword">import</span> random<span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>getrandbits<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></li><li><p><strong>random.uniform(a, b)</strong></p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 在[0, 5)之间随机返回一个浮点数</span><span class="token keyword">import</span> random<span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></li><li><p><strong>random.choice(seq)</strong></p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> randoma <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>b <span class="token operator">=</span> <span class="token string">"hello"</span>c <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">,</span> <span class="token string">"python"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>运行结果：</p><pre class=" language-python"><code class="language-python"><span class="token number">1</span>hhello</code></pre></li><li><p><strong>random.sample(seq, n)</strong></p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> randoma <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>b <span class="token operator">=</span> <span class="token string">"hello"</span>c <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">,</span> <span class="token string">"python"</span><span class="token punctuation">,</span> <span class="token string">"world"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>sample<span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>sample<span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>sample<span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>运行结果：</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'l'</span><span class="token punctuation">,</span> <span class="token string">'h'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'hello'</span><span class="token punctuation">,</span> <span class="token string">'python'</span><span class="token punctuation">]</span></code></pre></li><li><p><strong>random.shuffle(list)</strong></p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> randoma <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span>random<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span></code></pre><p>运行结果：</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub不再允许“RSA密钥与SHA-1一起使用”</title>
      <link href="/2022/06/08/github-bu-zai-yun-xu-rsa-mi-yao-yu-sha-1-yi-qi-shi-yong/"/>
      <url>/2022/06/08/github-bu-zai-yun-xu-rsa-mi-yao-yu-sha-1-yi-qi-shi-yong/</url>
      
        <content type="html"><![CDATA[<p>克隆GitHub仓库时，报错：</p><pre><code>Eclipse/Git: &quot;You&#39;re using an RSA key with SHA-1,which is no longer allowed.Please use a newer client or a different key type.&quot;</code></pre><p>算是小问题吧，就是不知道什么时候开始，GitHub不允许“RSA密钥与SHA-1一起使用“了。</p><p>然后查到了解决办法：</p><blockquote><p>使用 ECDSA 加密创建新的 SSH 密钥</p></blockquote><p><code>ssh-keygen -t ecdsa -b 521 -C &quot;example@example.com&quot;</code></p><p>然后正常上传使用就好了。</p><p>原文地址：[<a href="https://namespaceit.com/blog/youre-using-an-rsa-key-with-sha-1-which-is-no-longer-allowed-please-use-a-newer-client-or-a-different-key-type-eclipse-git">已解决]“您正在将 RSA 密钥与 SHA-1 一起使用，这不再允许。请使用较新的客户端或其他密钥类型 |。命名空间IT (namespaceit.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 问题解决 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题解决 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java小玩意：黄金矿工</title>
      <link href="/2022/05/21/java-xiao-wan-yi-huang-jin-kuang-gong/"/>
      <url>/2022/05/21/java-xiao-wan-yi-huang-jin-kuang-gong/</url>
      
        <content type="html"><![CDATA[<h1 id="Java小玩意：黄金矿工"><a href="#Java小玩意：黄金矿工" class="headerlink" title="Java小玩意：黄金矿工"></a>Java小玩意：黄金矿工</h1><p>这个小项目没有什么技术难点，但是还是比较适合像我一样的小白来练手用。</p><h2 id="一、-先看效果"><a href="#一、-先看效果" class="headerlink" title="一、 先看效果"></a>一、 先看效果</h2><p><img src="https://s2.loli.net/2022/05/20/7tJq2r5kOmLjusg.png"></p><h2 id="二、分析"><a href="#二、分析" class="headerlink" title="二、分析"></a>二、分析</h2><p>这个小项目主要有6大<strong>Java类</strong>：主类（GameWin）、背景类（Bg）、“线”类（Line）、金块类（Gold）、石头类（Rock）以及金块和石头类的父类（Object）。</p><p>其中，金块类（Gold）中又分：普通金块（Gold）、小金块（GoldMini）、大金块（GoldPlus）。<strong>由于三种金块的行为和逻辑一样，所以“大金块”和“小金块”都继承自“普通金块”。</strong></p><h2 id="三、实现"><a href="#三、实现" class="headerlink" title="三、实现"></a>三、实现</h2><h3 id="1-背景类（Bg-java）"><a href="#1-背景类（Bg-java）" class="headerlink" title="1. 背景类（Bg.java）"></a>1. 背景类（Bg.java）</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Bg</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 关卡数</span>    <span class="token keyword">static</span> <span class="token keyword">int</span> level <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 目标得分</span>    <span class="token keyword">int</span> goal <span class="token operator">=</span> <span class="token punctuation">(</span>level <span class="token operator">*</span> <span class="token number">500</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">550</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 总分</span>    <span class="token keyword">static</span> <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 药水数量</span>    <span class="token keyword">static</span> <span class="token keyword">int</span> waterNum <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 药水状态</span>    <span class="token keyword">static</span> <span class="token keyword">boolean</span> waterFlag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 开始时间</span>    <span class="token keyword">long</span> startTime<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 结束时间</span>    <span class="token keyword">long</span> endTime<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 药水价格</span>    <span class="token keyword">int</span> price <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 是否进入商店 f不购买</span>    <span class="token keyword">boolean</span> shop <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 载入图片</span>    Image bg <span class="token operator">=</span> Toolkit<span class="token punctuation">.</span><span class="token function">getDefaultToolkit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token string">"imgs/bg.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Image bg1 <span class="token operator">=</span> Toolkit<span class="token punctuation">.</span><span class="token function">getDefaultToolkit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token string">"imgs/bg1.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Image peo <span class="token operator">=</span> Toolkit<span class="token punctuation">.</span><span class="token function">getDefaultToolkit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token string">"imgs/peo.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Image water <span class="token operator">=</span> Toolkit<span class="token punctuation">.</span><span class="token function">getDefaultToolkit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token string">"imgs/water.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 绘制</span>    <span class="token keyword">void</span> <span class="token function">paintSelf</span><span class="token punctuation">(</span>Graphics g<span class="token punctuation">)</span> <span class="token punctuation">{</span>        g<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>bg<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>        g<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>bg1<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>GameWin<span class="token punctuation">.</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>                <span class="token function">drawWord</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> Color<span class="token punctuation">.</span>black<span class="token punctuation">,</span> <span class="token string">"按鼠标右键开始"</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">drawWord</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> Color<span class="token punctuation">.</span>red<span class="token punctuation">,</span> <span class="token string">"游戏规则："</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">drawWord</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> Color<span class="token punctuation">.</span>black<span class="token punctuation">,</span> <span class="token string">"点击鼠标左键放出抓钩"</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">560</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">drawWord</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> Color<span class="token punctuation">.</span>black<span class="token punctuation">,</span> <span class="token string">"抓住金块或石头可以点击鼠标右键"</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">620</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">drawWord</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> Color<span class="token punctuation">.</span>black<span class="token punctuation">,</span> <span class="token string">"使用“大力神药”快速收回金块或者爆破石头"</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">680</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>                g<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>peo<span class="token punctuation">,</span> <span class="token number">310</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">drawWord</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> Color<span class="token punctuation">.</span>black<span class="token punctuation">,</span> <span class="token string">"分数："</span> <span class="token operator">+</span> count<span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                g<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>water<span class="token punctuation">,</span> <span class="token number">550</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">drawWord</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> Color<span class="token punctuation">.</span>black<span class="token punctuation">,</span> <span class="token string">"×"</span> <span class="token operator">+</span> waterNum<span class="token punctuation">,</span> <span class="token number">610</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 关卡数&amp;目标得分</span>                <span class="token function">drawWord</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> Color<span class="token punctuation">.</span>black<span class="token punctuation">,</span> <span class="token string">"关卡："</span> <span class="token operator">+</span> level<span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">drawWord</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> Color<span class="token punctuation">.</span>black<span class="token punctuation">,</span> <span class="token string">"目标："</span> <span class="token operator">+</span> goal<span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">115</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 实时赋值</span>                endTime <span class="token operator">=</span> System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">long</span> time <span class="token operator">=</span> <span class="token number">20</span> <span class="token operator">-</span> <span class="token punctuation">(</span>endTime <span class="token operator">-</span> startTime<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">;</span>                <span class="token function">drawWord</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> Color<span class="token punctuation">.</span>black<span class="token punctuation">,</span> <span class="token string">"时间："</span> <span class="token operator">+</span> <span class="token punctuation">(</span>time <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">?</span> time <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">520</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>                g<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>water<span class="token punctuation">,</span> <span class="token number">330</span><span class="token punctuation">,</span> <span class="token number">380</span><span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">drawWord</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> Color<span class="token punctuation">.</span>black<span class="token punctuation">,</span> <span class="token string">"价格："</span> <span class="token operator">+</span> price<span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">drawWord</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> Color<span class="token punctuation">.</span>black<span class="token punctuation">,</span> <span class="token string">"是否购买“大力神药”？"</span><span class="token punctuation">,</span> <span class="token number">280</span><span class="token punctuation">,</span> <span class="token number">550</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">drawWord</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> Color<span class="token punctuation">.</span>black<span class="token punctuation">,</span> <span class="token string">"点击鼠标左键确认购买，右键退出商店"</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">700</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token keyword">if</span> <span class="token punctuation">(</span>shop<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    count <span class="token operator">=</span> count <span class="token operator">-</span> price<span class="token punctuation">;</span>                    waterNum<span class="token operator">++</span><span class="token punctuation">;</span>                    shop <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                    GameWin<span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                    startTime <span class="token operator">=</span> System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>                <span class="token function">drawWord</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> Color<span class="token punctuation">.</span>cyan<span class="token punctuation">,</span> <span class="token string">"失败"</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">350</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">drawWord</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> Color<span class="token punctuation">.</span>black<span class="token punctuation">,</span> <span class="token string">"分数："</span> <span class="token operator">+</span> count<span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">450</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">drawWord</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> Color<span class="token punctuation">.</span>black<span class="token punctuation">,</span> <span class="token string">"点击鼠标左键重新开始"</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">550</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>                <span class="token function">drawWord</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> Color<span class="token punctuation">.</span>red<span class="token punctuation">,</span> <span class="token string">"恭喜过关"</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">350</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">drawWord</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> Color<span class="token punctuation">.</span>black<span class="token punctuation">,</span> <span class="token string">"分数："</span> <span class="token operator">+</span> count<span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">450</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">drawWord</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> Color<span class="token punctuation">.</span>black<span class="token punctuation">,</span> <span class="token string">"点击鼠标左键重新开始"</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">550</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token operator">:</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// t倒计时完成，f未完成倒计时</span>    <span class="token keyword">boolean</span> <span class="token function">gameTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">long</span> time <span class="token operator">=</span> <span class="token punctuation">(</span>endTime <span class="token operator">-</span> startTime<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>time <span class="token operator">>=</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 重置元素</span>    <span class="token keyword">void</span> <span class="token function">reGame</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 关卡数</span>        level <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 目标得分</span>        goal <span class="token operator">=</span> <span class="token punctuation">(</span>level <span class="token operator">*</span> <span class="token number">500</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">550</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 总分</span>        count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 药水数量</span>        waterNum <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 药水状态</span>        waterFlag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 绘制字符串</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">drawWord</span><span class="token punctuation">(</span>Graphics g<span class="token punctuation">,</span> <span class="token keyword">int</span> size<span class="token punctuation">,</span> Color color<span class="token punctuation">,</span> String str<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>        g<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span><span class="token punctuation">;</span>        g<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Font</span><span class="token punctuation">(</span><span class="token string">"宋体"</span><span class="token punctuation">,</span> Font<span class="token punctuation">.</span>BOLD<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        g<span class="token punctuation">.</span><span class="token function">drawString</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>“背景类”中处理所有显示在窗口上的内容，包括背景、文字等信息</p><p>但是有一点需要注意：</p><pre class=" language-java"><code class="language-java"> <span class="token comment" spellcheck="true">// 载入图片</span>    Image bg <span class="token operator">=</span> Toolkit<span class="token punctuation">.</span><span class="token function">getDefaultToolkit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token string">"imgs/bg.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Image bg1 <span class="token operator">=</span> Toolkit<span class="token punctuation">.</span><span class="token function">getDefaultToolkit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token string">"imgs/bg1.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Image peo <span class="token operator">=</span> Toolkit<span class="token punctuation">.</span><span class="token function">getDefaultToolkit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token string">"imgs/peo.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Image water <span class="token operator">=</span> Toolkit<span class="token punctuation">.</span><span class="token function">getDefaultToolkit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token string">"imgs/water.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>使用这种方法导入图片，在导出 <code>jar包</code>时，并不能将图片资源一起打包，如果运行jar包，<strong>需要将图片等资源放在和代码文件相同的相对路径下</strong>。</p><h3 id="2-“线”（Line-java）"><a href="#2-“线”（Line-java）" class="headerlink" title="2. “线”（Line.java）"></a>2. “线”（Line.java）</h3><p>这个“线”就是游戏画面中左右摇摆的红色线。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Line</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 起点坐标</span>    <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">380</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> y <span class="token operator">=</span> <span class="token number">180</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 终点坐标</span>    <span class="token keyword">int</span> endx <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> endy <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 线段长度</span>    <span class="token keyword">double</span> length <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>    <span class="token keyword">double</span> MIN_length <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>    <span class="token keyword">double</span> MAX_length <span class="token operator">=</span> <span class="token number">750</span><span class="token punctuation">;</span>    <span class="token keyword">double</span> n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 方向</span>    <span class="token keyword">int</span> dir <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 状态: 0摇摆，1抓取，2回收，3抓取返回</span>    <span class="token keyword">int</span> state <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 钩爪</span>    Image hook <span class="token operator">=</span> Toolkit<span class="token punctuation">.</span><span class="token function">getDefaultToolkit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token string">"imgs/hook.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    GameWin frame<span class="token punctuation">;</span>    <span class="token function">Line</span><span class="token punctuation">(</span>GameWin frame<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>frame <span class="token operator">=</span> frame<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 判断是否抓取成功</span>    <span class="token keyword">void</span> <span class="token function">logic</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Object obj <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>frame<span class="token punctuation">.</span>objectList<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>endx <span class="token operator">></span> obj<span class="token punctuation">.</span>x <span class="token operator">&amp;&amp;</span> endx <span class="token operator">&lt;</span> obj<span class="token punctuation">.</span>x <span class="token operator">+</span> obj<span class="token punctuation">.</span>width <span class="token operator">&amp;&amp;</span> endy <span class="token operator">></span> obj<span class="token punctuation">.</span>y <span class="token operator">&amp;&amp;</span> endy <span class="token operator">&lt;</span> obj<span class="token punctuation">.</span>y <span class="token operator">+</span> obj<span class="token punctuation">.</span>height<span class="token punctuation">)</span> <span class="token punctuation">{</span>                state <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>                obj<span class="token punctuation">.</span>flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 绘制方法</span>    <span class="token keyword">void</span> <span class="token function">lines</span><span class="token punctuation">(</span>Graphics g<span class="token punctuation">)</span> <span class="token punctuation">{</span>        endx <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>x <span class="token operator">+</span> length <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">cos</span><span class="token punctuation">(</span>n <span class="token operator">*</span> Math<span class="token punctuation">.</span>PI<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        endy <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>y <span class="token operator">+</span> length <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span>n <span class="token operator">*</span> Math<span class="token punctuation">.</span>PI<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        g<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>red<span class="token punctuation">)</span><span class="token punctuation">;</span>        g<span class="token punctuation">.</span><span class="token function">drawLine</span><span class="token punctuation">(</span>x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> endx <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> endy<span class="token punctuation">)</span><span class="token punctuation">;</span>        g<span class="token punctuation">.</span><span class="token function">drawLine</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> endx<span class="token punctuation">,</span> endy<span class="token punctuation">)</span><span class="token punctuation">;</span>        g<span class="token punctuation">.</span><span class="token function">drawLine</span><span class="token punctuation">(</span>x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> y <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> endx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> endy<span class="token punctuation">)</span><span class="token punctuation">;</span>        g<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>hook<span class="token punctuation">,</span> endx <span class="token operator">-</span> <span class="token number">36</span><span class="token punctuation">,</span> endy <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">void</span> <span class="token function">paintSelf</span><span class="token punctuation">(</span>Graphics g<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">logic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">0.1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    dir <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">></span> <span class="token number">0.9</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    dir <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span>                n <span class="token operator">=</span> n <span class="token operator">+</span> <span class="token number">0.02</span> <span class="token operator">*</span> dir<span class="token punctuation">;</span>                <span class="token function">lines</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>length <span class="token operator">&lt;</span> MAX_length<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    length <span class="token operator">=</span> length <span class="token operator">+</span> <span class="token number">50</span><span class="token punctuation">;</span>                    <span class="token function">lines</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    state <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>length <span class="token operator">></span> MIN_length<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    length <span class="token operator">=</span> length <span class="token operator">-</span> <span class="token number">50</span><span class="token punctuation">;</span>                    <span class="token function">lines</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    state <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>                <span class="token keyword">int</span> m <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>length <span class="token operator">></span> MIN_length<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    length <span class="token operator">=</span> length <span class="token operator">-</span> <span class="token number">20</span><span class="token punctuation">;</span>                    <span class="token function">lines</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">for</span> <span class="token punctuation">(</span>Object obj <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>frame<span class="token punctuation">.</span>objectList<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span>flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>                            m <span class="token operator">=</span> obj<span class="token punctuation">.</span>m<span class="token punctuation">;</span>                            obj<span class="token punctuation">.</span>x <span class="token operator">=</span> endx <span class="token operator">-</span> obj<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>                            obj<span class="token punctuation">.</span>y <span class="token operator">=</span> endy<span class="token punctuation">;</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>length <span class="token operator">&lt;=</span> MIN_length<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                obj<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">150</span><span class="token punctuation">;</span>                                obj<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">150</span><span class="token punctuation">;</span>                                obj<span class="token punctuation">.</span>flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                                Bg<span class="token punctuation">.</span>waterFlag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                                <span class="token comment" spellcheck="true">// 加分</span>                                Bg<span class="token punctuation">.</span>count <span class="token operator">+=</span> obj<span class="token punctuation">.</span>count<span class="token punctuation">;</span>                                state <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span><span class="token punctuation">;</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span>Bg<span class="token punctuation">.</span>waterFlag<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span>type <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                    m <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span><span class="token punctuation">;</span>                                <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span>type <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                    obj<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">150</span><span class="token punctuation">;</span>                                    obj<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">150</span><span class="token punctuation">;</span>                                    obj<span class="token punctuation">.</span>flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                                    Bg<span class="token punctuation">.</span>waterFlag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                                    state <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>                                <span class="token punctuation">}</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    Thread<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token operator">:</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 重置线</span>    <span class="token keyword">void</span> <span class="token function">reGame</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        length <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h3 id="3-”块“的父类（Object-java）"><a href="#3-”块“的父类（Object-java）" class="headerlink" title="3. ”块“的父类（Object.java）"></a>3. ”块“的父类（Object.java）</h3><p>由于”金块“和”石块“在处理的逻辑和其具有的属性基本都是相同的，所以使他们继承自相同的父类，简化代码。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Object</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 坐标</span>    <span class="token keyword">int</span> x<span class="token punctuation">;</span>    <span class="token keyword">int</span> y<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 宽高</span>    <span class="token keyword">int</span> width<span class="token punctuation">;</span>    <span class="token keyword">int</span> height<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 图片</span>    Image img<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 标记 是否能移动</span>    <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 质量</span>    <span class="token keyword">int</span> m<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 积分</span>    <span class="token keyword">int</span> count<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 类型 1 金块 2 石块 3</span>    <span class="token keyword">int</span> type<span class="token punctuation">;</span>    <span class="token keyword">void</span> <span class="token function">paintSelf</span><span class="token punctuation">(</span>Graphics g<span class="token punctuation">)</span> <span class="token punctuation">{</span>        g<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> width<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 获取矩形</span>    <span class="token keyword">public</span> Rectangle <span class="token function">getRec</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Rectangle</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>其中 <code>getRec（）</code>方法在主类中会用到，其作用是<strong>解决各种块的重叠问题</strong></p><p><code>m</code>为质量，要<strong>区别不同的块的拉取速度</strong>，所以引入质量这个属性</p><h3 id="4-石块（Rock-java）"><a href="#4-石块（Rock-java）" class="headerlink" title="4. 石块（Rock.java）"></a>4. 石块（Rock.java）</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Rock</span> <span class="token keyword">extends</span> <span class="token class-name">Object</span> <span class="token punctuation">{</span>    <span class="token function">Rock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">700</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">550</span> <span class="token operator">+</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token number">71</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">71</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>m <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>img <span class="token operator">=</span> Toolkit<span class="token punctuation">.</span><span class="token function">getDefaultToolkit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token string">"imgs/rock1.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h3 id="5-金块（Gold-java）"><a href="#5-金块（Gold-java）" class="headerlink" title="5. 金块（Gold.java）"></a>5. 金块（Gold.java）</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Gold</span> <span class="token keyword">extends</span> <span class="token class-name">Object</span> <span class="token punctuation">{</span>    <span class="token function">Gold</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">700</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">550</span> <span class="token operator">+</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token number">52</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">52</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>m <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token number">250</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>img <span class="token operator">=</span> Toolkit<span class="token punctuation">.</span><span class="token function">getDefaultToolkit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token string">"imgs/gold1.gif"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">GoldMini</span> <span class="token keyword">extends</span> <span class="token class-name">Gold</span> <span class="token punctuation">{</span>    <span class="token function">GoldMini</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token number">36</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">36</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>m <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token number">150</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>img <span class="token operator">=</span> Toolkit<span class="token punctuation">.</span><span class="token function">getDefaultToolkit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token string">"imgs/gold0.gif"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">GoldPlus</span> <span class="token keyword">extends</span> <span class="token class-name">Gold</span> <span class="token punctuation">{</span>    <span class="token function">GoldPlus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">650</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token number">105</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">105</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>m <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>img <span class="token operator">=</span> Toolkit<span class="token punctuation">.</span><span class="token function">getDefaultToolkit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token string">"imgs/gold2.gif"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h3 id="6-主类（GameWin-java）"><a href="#6-主类（GameWin-java）" class="headerlink" title="6. 主类（GameWin.java）"></a>6. 主类（GameWin.java）</h3><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span>MouseAdapter<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span>MouseEvent<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GameWin</span> <span class="token keyword">extends</span> <span class="token class-name">JFrame</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 0未开始，1运行中，2商店，3失败，4胜利</span>    <span class="token keyword">static</span> <span class="token keyword">int</span> state <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 存储金块、石块</span>    List<span class="token operator">&lt;</span>Object<span class="token operator">></span> objectList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Bg bg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Line line <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Line</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 是否可以放置</span>        <span class="token keyword">boolean</span> isPlace <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">11</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">double</span> random <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            Gold gold<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 存放当前生成的金块</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>random <span class="token operator">&lt;</span> <span class="token number">0.3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                gold <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GoldMini</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>random <span class="token operator">&lt;</span> <span class="token number">0.7</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                gold <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Gold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                gold <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GoldPlus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>Object obj <span class="token operator">:</span> objectList<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>gold<span class="token punctuation">.</span><span class="token function">getRec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intersects</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">getRec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">// 不可放置</span>                    isPlace <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>isPlace<span class="token punctuation">)</span> <span class="token punctuation">{</span>                objectList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>gold<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                isPlace <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                i<span class="token operator">--</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            Rock rock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Rock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>Object obj <span class="token operator">:</span> objectList<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>rock<span class="token punctuation">.</span><span class="token function">getRec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intersects</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">getRec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    isPlace <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>isPlace<span class="token punctuation">)</span> <span class="token punctuation">{</span>                objectList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>rock<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                isPlace <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                i<span class="token operator">--</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    Image offScreenImage<span class="token punctuation">;</span>    <span class="token keyword">void</span> <span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">768</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setLocationRelativeTo</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"黄金矿工"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setDefaultCloseOperation</span><span class="token punctuation">(</span>EXIT_ON_CLOSE<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">addMouseListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MouseAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mouseClicked</span><span class="token punctuation">(</span>MouseEvent e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">mouseClicked</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">switch</span> <span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                            state <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                            bg<span class="token punctuation">.</span>startTime <span class="token operator">=</span> System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span><span class="token punctuation">;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> line<span class="token punctuation">.</span>state <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                            line<span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span><span class="token punctuation">;</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span> <span class="token operator">&amp;&amp;</span> line<span class="token punctuation">.</span>state <span class="token operator">==</span> <span class="token number">3</span> <span class="token operator">&amp;&amp;</span> Bg<span class="token punctuation">.</span>waterNum <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                            Bg<span class="token punctuation">.</span>waterFlag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                            Bg<span class="token punctuation">.</span>waterNum<span class="token operator">--</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span><span class="token punctuation">;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                            bg<span class="token punctuation">.</span>shop <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span><span class="token punctuation">;</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                            state <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                            bg<span class="token punctuation">.</span>startTime <span class="token operator">=</span> System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span><span class="token punctuation">;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>                    <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                            state <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                            bg<span class="token punctuation">.</span><span class="token function">reGame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            line<span class="token punctuation">.</span><span class="token function">reGame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span><span class="token punctuation">;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token keyword">default</span><span class="token operator">:</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 红线摇摆</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">repaint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">nextLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                Thread<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 下一关</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">nextLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>bg<span class="token punctuation">.</span><span class="token function">gameTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> state <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>Bg<span class="token punctuation">.</span>count <span class="token operator">>=</span> bg<span class="token punctuation">.</span>goal<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>Bg<span class="token punctuation">.</span>level <span class="token operator">==</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    state <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    state <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>                    Bg<span class="token punctuation">.</span>level<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                state <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>            <span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            GameWin gameWin1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GameWin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            gameWin1<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">paint</span><span class="token punctuation">(</span>Graphics g<span class="token punctuation">)</span> <span class="token punctuation">{</span>        offScreenImage <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createImage</span><span class="token punctuation">(</span><span class="token number">768</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Graphics gImage <span class="token operator">=</span> offScreenImage<span class="token punctuation">.</span><span class="token function">getGraphics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        bg<span class="token punctuation">.</span><span class="token function">paintSelf</span><span class="token punctuation">(</span>gImage<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 绘制金块、石块</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>Object obj <span class="token operator">:</span> objectList<span class="token punctuation">)</span> <span class="token punctuation">{</span>                obj<span class="token punctuation">.</span><span class="token function">paintSelf</span><span class="token punctuation">(</span>gImage<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 绘制红线</span>            line<span class="token punctuation">.</span><span class="token function">paintSelf</span><span class="token punctuation">(</span>gImage<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        g<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>offScreenImage<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        GameWin game <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GameWin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        game<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h2 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h2><p>源码：<a href="https://github.com/Cikian/GoldMiner.git">GoldMiner</a></p><p>安装包：<a href="https://download.cikian.cn/files/GoldMiner-setup.exe">GoldMiner-setup.exe</a></p><p>经过我简单测试，存在一个Bug，运行时有几率出现”红线和抓钩“消失的情况，需要刷新窗口才可正常运行，由于这段时间要准备期末考试，所以也就没有时间再去深究这个。但是我猜测可能的原因是因为：在 <code>Line.java</code>类中，<code>state</code>属性没有初始化的原因，但是 <code>state</code>是int型，创建对象时会默认初始化为0，不知道是不是这个原因。</p><p>最后，再次重申一遍，这个小项目没有什么技术难点，用到的方法也基本都是一些基础的东西，适合像我一样的小白练手用，大家也不要太过纠结方法实现的”好坏“，毕竟，我也还是一个小白。</p><p><strong>当然，我还是欢迎一切积极、善意的讨论与指正</strong> ^_^</p>]]></content>
      
      
      <categories>
          
          <category> 小玩意 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序—url带参传值</title>
      <link href="/2022/05/04/wei-xin-xiao-cheng-xu-url-dai-can-chuan-zhi/"/>
      <url>/2022/05/04/wei-xin-xiao-cheng-xu-url-dai-can-chuan-zhi/</url>
      
        <content type="html"><![CDATA[<h1 id="微信小程序不同页面间url带参传递数据"><a href="#微信小程序不同页面间url带参传递数据" class="headerlink" title="微信小程序不同页面间url带参传递数据"></a>微信小程序不同页面间url带参传递数据</h1><h2 id="使用格式"><a href="#使用格式" class="headerlink" title="使用格式"></a>使用格式</h2><ul><li><p><strong>定义跳转页面的方法</strong></p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">方法名</span><span class="token punctuation">(</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>    wx<span class="token punctuation">.</span><span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      url<span class="token punctuation">:</span> <span class="token string">'/pages/xxx/xxx?name='</span> <span class="token operator">+</span> xxx<span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span></code></pre><p>其中，加号右边的 <code>xxx</code> 为需要传递的数据，可以是<code>标签的id</code>，<code>页面数据</code>等</p><p>多个数据使用 <code>&amp;</code> 连接，如：<code>/pages/xxx/xxx?name1=’ + xxx + ‘&amp;name2=’ + xxx),</code></p></li><li><p><strong>给标签绑定方法</strong></p></li><li><p><strong>目标页面接收数据</strong></p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    data<span class="token punctuation">:</span> <span class="token punctuation">{</span>        xxx<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token function">onLoad</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            xxx<span class="token punctuation">:</span> options<span class="token punctuation">.</span>name        <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span></code></pre><p> 其中，options存储了传递过来的各种数据</p></li></ul><h2 id="一、传递标签的id"><a href="#一、传递标签的id" class="headerlink" title="一、传递标签的id"></a>一、传递标签的id</h2><p>首先第一种，也是比较常见的情况：<strong>传递标签的id</strong></p><p>假如现在有这样一个需求：首页是一个物品展示页面，展示了很多物品，然后需要点击某个物品后进入它的详情页，如果有几十个物品，显然，给每个页面写一个页面是不现实的。这时我们需要做的是，写一个页面模板，然后根据点击不同的物品，去展示对应的内容。<br>所以，最简单的做法是，当点击某个物品后，向模板页面传递一个值，这个值唯一，然后判断传递的值，根据不同的值，给模板页面传递不同的内容。</p><p>举例：</p><p>首页展示不同的树的信息，点击后显示详细信息</p><p>首页wxml：</p><pre class=" language-html"><code class="language-html">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>trees<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>treesPicBox<span class="token punctuation">"</span></span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>toTreeInfo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>apple<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>treesPic<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{{apple.imgURL};};<span class="token punctuation">"</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>widthFix<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{apple.name};};<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>trees<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>treesPicBox<span class="token punctuation">"</span></span> <span class="token attr-name">bindtap</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>toTreeInfo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>peach<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>treesPic<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{{peach.imgURL};};<span class="token punctuation">"</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>widthFix<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{peach.name};};<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span></code></pre><p>首页js：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">toTreeInfo</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span>    wx<span class="token punctuation">.</span><span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      url<span class="token punctuation">:</span> <span class="token string">'/pages/treeInfo/treeInfo?id='</span> <span class="token operator">+</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>id<span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span></code></pre><p>首页显示效果：</p><p><img src="https://s2.loli.net/2022/05/04/TYey7SABPkiuXKm.png"></p><p>信息页wxml：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{{treeInfo.imgURL};};<span class="token punctuation">"</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>widthFix<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{treeInfo.name};};<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>words<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{treeInfo.words};};<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>infoBox<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>适种环境：{{treeInfo.environment};};<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>结果周期：{{treeInfo.cycle};};<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>一般寿命：{{treeInfo.life};};<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span></code></pre><p>信息页js：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 页面的初始数据     */</span>    data<span class="token punctuation">:</span> <span class="token punctuation">{</span>        treeName<span class="token punctuation">:</span> <span class="token string">'treeName'</span><span class="token punctuation">,</span>        treeInfo<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>            id<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>            name<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>            words<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>            imgURL<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">/**     * 生命周期函数--监听页面加载     */</span>    <span class="token function">onLoad</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 存储传入的id</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            treeName<span class="token punctuation">:</span> options<span class="token punctuation">.</span>id        <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// 根据不同的id展示不同的内容</span>        <span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>treeName<span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">case</span> <span class="token string">'apple'</span><span class="token punctuation">:</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                    treeInfo<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>                        id<span class="token punctuation">:</span> <span class="token string">'tree1'</span><span class="token punctuation">,</span>                        name<span class="token punctuation">:</span> <span class="token string">'苹果'</span><span class="token punctuation">,</span>                        imgURL<span class="token punctuation">:</span> <span class="token string">'https://img.cikian.cn/donTree/apple.jpg'</span><span class="token punctuation">,</span>                        environment<span class="token punctuation">:</span> <span class="token string">'苹果适合的环境'</span><span class="token punctuation">,</span>                        cycle<span class="token punctuation">:</span> <span class="token string">'苹果生长周期'</span><span class="token punctuation">,</span>                        life<span class="token punctuation">:</span> <span class="token string">'苹果寿命'</span><span class="token punctuation">,</span>                        words<span class="token punctuation">:</span> <span class="token string">'这是大苹果这是大苹果这是大苹果这是大苹果这是大苹果这是大苹果这是大苹果这是大苹果这是大苹果这是大苹果这是大苹果这是大苹果这是大苹果'</span><span class="token punctuation">,</span>                    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">'peach'</span><span class="token punctuation">:</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                    treeInfo<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>                        id<span class="token punctuation">:</span> <span class="token string">'tree1'</span><span class="token punctuation">,</span>                        name<span class="token punctuation">:</span> <span class="token string">'桃'</span><span class="token punctuation">,</span>                        imgURL<span class="token punctuation">:</span> <span class="token string">'https://img.cikian.cn/donTree/peach.jpg'</span><span class="token punctuation">,</span>                        environment<span class="token punctuation">:</span> <span class="token string">'桃子适合的环境'</span><span class="token punctuation">,</span>                        cycle<span class="token punctuation">:</span> <span class="token string">'桃子生长周期'</span><span class="token punctuation">,</span>                        life<span class="token punctuation">:</span> <span class="token string">'桃子寿命'</span><span class="token punctuation">,</span>                        words<span class="token punctuation">:</span> <span class="token string">'这是大桃子这是大桃子这是大桃子这是大桃子这是大桃子这是大桃子这是大桃子这是大桃子这是大桃子这是大桃子这是大桃子这是大桃子这是大桃子'</span><span class="token punctuation">,</span>                    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span></code></pre><p>详情页显示效果：</p><p><img src="https://s2.loli.net/2022/05/04/9rCTh4ZNDwo5kjc.png"><img src="https://s2.loli.net/2022/05/04/nhZrVSEt3Ps7UuX.png"></p><h2 id="二、使用自定义-data-获取定义的文本"><a href="#二、使用自定义-data-获取定义的文本" class="headerlink" title="二、使用自定义 data-  获取定义的文本"></a>二、使用自定义 data-  获取定义的文本</h2><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">data-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>C<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>C<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!--</span> <span class="token attr-name">text为自定义名称</span> <span class="token attr-name">--!</span><span class="token punctuation">></span></span></code></pre><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//跳转方法</span><span class="token function">方法名</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span>    wx<span class="token punctuation">.</span><span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      url<span class="token punctuation">:</span> <span class="token string">'/pages/xxx/xxx?id='</span> <span class="token operator">+</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>id <span class="token operator">+</span> <span class="token string">'&amp;set='</span> <span class="token operator">+</span> event<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 这里的text与自己定义的text对应</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//获取数据方法</span><span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    data<span class="token punctuation">:</span> <span class="token punctuation">{</span>        name1<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>          name2<span class="token punctuation">:</span> <span class="token string">''</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token function">onLoad</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            name1<span class="token punctuation">:</span> options<span class="token punctuation">.</span>id<span class="token punctuation">,</span>            name2<span class="token punctuation">:</span> options<span class="token punctuation">.</span><span class="token keyword">set</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span></code></pre><h2 id="三、使用页面数据（data中的数据）"><a href="#三、使用页面数据（data中的数据）" class="headerlink" title="三、使用页面数据（data中的数据）"></a>三、使用页面数据（data中的数据）</h2><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//跳转方法</span><span class="token function">方法名</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span>    wx<span class="token punctuation">.</span><span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      url<span class="token punctuation">:</span> <span class="token string">'/pages/xxx/xxx?id='</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>xxx<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 这里的xxx为data中的数据的名称</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>同样也可以使用固定的数据，数组中的元素等等</p><p>如：<code>&#39;pages/xxx/xxx?id+&#39; + 123abc</code>，<code>&#39;pages/xxx/xxx?id+&#39; + arr[0]</code>等</p><h2 id="四、注意"><a href="#四、注意" class="headerlink" title="四、注意"></a>四、注意</h2><ul><li>使用url带参传递数据有字节的限制，可能遇到被截断的情况，可以编码传送，解码接收；</li><li><code>=</code> 后不可有空格；</li><li>如果传递的是一个对象，需要先把对象通过JSON.stringify(obj)将 object 对象转换为 JSON 字符串进行参数传递，再到接收页面通过JSON.parse解析使用；</li></ul>]]></content>
      
      
      <categories>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java—包&amp;导包</title>
      <link href="/2022/04/24/java-bao-dao-bao/"/>
      <url>/2022/04/24/java-bao-dao-bao/</url>
      
        <content type="html"><![CDATA[<h2 id="一、包"><a href="#一、包" class="headerlink" title="一、包"></a>一、包</h2><p>概念：包其实就是文件夹，方便对代码进行分类</p><p><strong>定义格式：</strong></p><ul><li>格式：<strong>package 包名;</strong> （多级包用“.”分开）</li><li>范例：package com.company;</li></ul><h2 id="二、导包"><a href="#二、导包" class="headerlink" title="二、导包"></a>二、导包</h2><p>举例：</p><p>Cikian类和Test类在两个不同的软件包里</p><p><img src="https://s2.loli.net/2022/04/24/NJXUOkfyqFZobvi.png"></p><p>如果直接使用Test类创建对象会报错，这时便需要<strong>导包</strong></p><p><img src="https://s2.loli.net/2022/04/24/kFV3D8P9XqLOQYv.png"></p><p>导包有两种方式：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Cikian</span> <span class="token punctuation">{</span>    cn<span class="token punctuation">.</span>company<span class="token punctuation">.</span>Test te <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">cn<span class="token punctuation">.</span>company<span class="token punctuation">.</span>Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>但是习惯使用第二种导包方式，即：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> cn<span class="token punctuation">.</span>company<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Cikian</span> <span class="token punctuation">{</span>    Test te <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p><strong>导包的格式：</strong></p><ul><li>格式：import 包名;</li><li>范例：import cn.company.Test;</li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java—继承</title>
      <link href="/2022/04/24/java-ji-cheng/"/>
      <url>/2022/04/24/java-ji-cheng/</url>
      
        <content type="html"><![CDATA[<h1 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h1><h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><p>继承是面向对象三大特征之一。可以使得子类具有父类的属性和方法，还可以在子类中重新定义，追加属性和方法。</p><ul><li><strong>继承的格式：</strong>public class 子类名 <strong>extends</strong> 父类名{}</li><li>父类，也被称为<strong>基类、超类</strong></li><li>子类，也被称为<strong>派生类</strong></li></ul><p><strong>继承中子类的特点：</strong></p><ul><li>子类可以有父类的内容</li><li>子类还可以有自己特有的内容</li></ul><h2 id="二、继承的好处与弊端"><a href="#二、继承的好处与弊端" class="headerlink" title="二、继承的好处与弊端"></a>二、继承的好处与弊端</h2><p>继承的好处</p><ol><li>提高了代码的<strong>复用性</strong>（多个类相同的成员可以放到同一个类中）</li><li>提高了代码的<strong>维护性</strong>（如果多个方法的代码需要修改，修改一处即可）</li></ol><p>继承的弊端：</p><ul><li>继承让类与类之间产生了关系，类的耦合性增强了，当父类发生变化时，子类实现也不得不跟着变化，削弱了子类的独立性。</li></ul><h2 id="三、继承中变量的访问特点"><a href="#三、继承中变量的访问特点" class="headerlink" title="三、继承中变量的访问特点"></a>三、继承中变量的访问特点</h2><p><strong>在子类方法中访问一个变量：</strong></p><ol><li>在子类局部范围查找；</li><li>在子类成员范围查找；</li><li>在父类成员范围查找；</li><li>如果都没有会报错（不考虑父类的父类……）</li></ol><h2 id="四、super"><a href="#四、super" class="headerlink" title="四、super"></a>四、super</h2><p>先用代码感受一下<strong>super</strong>关键字的使用方法</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//父类</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Fu</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> age<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//子类</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Zi</span> <span class="token keyword">extends</span> <span class="token class-name">Fu</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> age <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> age <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">super</span><span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//测试类</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Zi zi <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Zi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        zi<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>控制台输出：</p><p><img src="https://s2.loli.net/2022/04/24/ZTnu4LxM2GYeChB.png"></p><p><strong>super</strong>关键字的用法和<strong>this</strong>关键字类似：</p><ul><li>this代表本类对象的引用；</li><li>super代表父类存储空间的标识（可以理解为父类对象引用）</li></ul><p>附：this和super常用三种用法：</p><p><img src="https://s2.loli.net/2022/04/24/bplFLWS6wXdUroD.png"></p><h2 id="五、继承中构造方法的访问特点"><a href="#五、继承中构造方法的访问特点" class="headerlink" title="五、继承中构造方法的访问特点"></a>五、继承中构造方法的访问特点</h2><p><strong>子类中所有的构造方法都会默认访问父类中的无参构造方法</strong>，原因：</p><ol><li>子类会继承父类中的数据，可能还会使用父类的数据。所以子类初始化前一定会先完成父类数据的初始化；</li><li>每一个子类构造方法的第一条语句默认都是 <strong>super( )</strong>;</li></ol><p>*如果在父类中只定义了带参的构造方法而没有无参构造方法，在子类中调用构造方法时会报错，但是可以使用 <strong>super(参数)</strong> 调用父类中带参构造方法。</p><h2 id="六、继承中成员方法的访问特点"><a href="#六、继承中成员方法的访问特点" class="headerlink" title="六、继承中成员方法的访问特点"></a>六、继承中成员方法的访问特点</h2><p><strong>通过子类对象访问一个方法：</strong></p><ol><li>在子类成员范围查找；</li><li>在父类成员范围查找；</li><li>如果都没有会报错（不考虑父类的父类……）</li></ol><h2 id="七、方法重写"><a href="#七、方法重写" class="headerlink" title="七、方法重写"></a>七、方法重写</h2><p>概念：子类中出现了和父类中一模一样的方法声明；</p><p>应用：当子类需要父类的功能，而功能主体子类有自己特有内容时，可以重写父类中的方法，这样，既保留了父类的功能，又定义了子类特有的内容。</p><p><strong>注意事项：</strong></p><ul><li><p>父类中私有方法子类不能重写，因为父类私有成员子类不能继承；</p></li><li><p><strong>重写时，子类方法的访问权限不能比父类方法的访问权限低；</strong></p></li></ul><h2 id="八、继承中的注意事项"><a href="#八、继承中的注意事项" class="headerlink" title="八、继承中的注意事项"></a>八、继承中的注意事项</h2><ol><li>子类不能继承多个类；</li><li>支持多层继承，如：“爸爸”继承“爷爷”，“爸爸”即有了“爷爷”中的方法，“儿子”继承“爸爸”，“儿子”即有了“爸爸”中的方法，相当于“儿子”有了“爷爷”中的方法。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java小玩意：猜数游戏</title>
      <link href="/2022/04/07/java-xiao-wan-yi-cai-shu-you-xi/"/>
      <url>/2022/04/07/java-xiao-wan-yi-cai-shu-you-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="通过Random获取随机数实现的一个超简单的猜数游戏"><a href="#通过Random获取随机数实现的一个超简单的猜数游戏" class="headerlink" title="通过Random获取随机数实现的一个超简单的猜数游戏"></a>通过Random获取随机数实现的一个超简单的猜数游戏</h2><p><strong>上代码：</strong></p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//导包</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Random<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Scanner<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Random r<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> x<span class="token operator">=</span>r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        Scanner input<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入1-100的整数："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span> <span class="token punctuation">;</span> <span class="token punctuation">;</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">int</span> getNum<span class="token operator">=</span>input<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            i<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>getNum<span class="token operator">></span><span class="token number">100</span><span class="token operator">|</span>getNum<span class="token operator">&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"输入有误，请重新输入："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>getNum<span class="token operator">&lt;</span>x<span class="token punctuation">)</span><span class="token punctuation">{</span>                    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"小了,请重新输入:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>getNum<span class="token operator">></span>x<span class="token punctuation">)</span><span class="token punctuation">{</span>                    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"大了,请重新输入:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>getNum<span class="token operator">==</span>x<span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"恭喜,输入正确！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你一共输入了"</span><span class="token operator">+</span>i<span class="token operator">+</span><span class="token string">"次。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>非常简单，就不做演示了，有兴趣可以自己复制一份运行，但是推荐看一遍之后自己写哟。</p><p><strong>Fork：<a href="https://github.com/Cikian/GuessNumber.git">https://github.com/Cikian/GuessNumber.git</a></strong></p>]]></content>
      
      
      <categories>
          
          <category> 小玩意 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础方法（更新中）</title>
      <link href="/2022/03/27/java-ji-chu-fang-fa/"/>
      <url>/2022/03/27/java-ji-chu-fang-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="一、Scanner"><a href="#一、Scanner" class="headerlink" title="一、Scanner"></a>一、Scanner</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Scanner<span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//导包</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyScanner</span> <span class="token punctuation">{</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Scanner sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//创建对象    </span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"输入数据:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//多行输入</span>        <span class="token keyword">int</span> a <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> b <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h2 id="二、Random-随机数"><a href="#二、Random-随机数" class="headerlink" title="二、Random 随机数"></a>二、Random 随机数</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Random<span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//导包</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyRandom</span> <span class="token punctuation">{</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Random r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//创建对象    </span>                <span class="token keyword">int</span> a <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//给a赋值随机数</span>        <span class="token comment" spellcheck="true">//获取数据范围[0,10)</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h2 id="三、数组"><a href="#三、数组" class="headerlink" title="三、数组"></a>三、数组</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyArr</span> <span class="token punctuation">{</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//动态初始化    </span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//静态初始化</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr3 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//静态初始化（简写）</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h2 id="四、方法"><a href="#四、方法" class="headerlink" title="四、方法"></a>四、方法</h2><pre class=" language-java"><code class="language-java">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> a<span class="token operator">=</span><span class="token number">28</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> b<span class="token operator">=</span><span class="token number">25</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> max<span class="token operator">=</span><span class="token function">getMax</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//调用并传参数</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>max<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">getMax</span><span class="token punctuation">(</span><span class="token keyword">int</span> num1<span class="token punctuation">,</span> <span class="token keyword">int</span> num2<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//num1和num2为形参</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>num1<span class="token operator">></span>num2<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> num1<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//返回值</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> num2<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//返回值</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><blockquote><p>方法重载：</p><blockquote><p>构成条件：</p><ol><li>多个方法在同一个类中；</li><li>多个方法具有相同的方法名；</li><li>多个方法的参数不同，类型不同或者数量不同。</li></ol></blockquote><ul><li>方法重载与返回值无关；</li><li>在调用的时候，Java虚拟机会通过参数的不同来区分同名的方法。</li></ul></blockquote><h2 id="五、private-amp-this"><a href="#五、private-amp-this" class="headerlink" title="五、private&amp;this"></a>五、private&amp;this</h2><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//学生类</span><span class="token keyword">package</span> com<span class="token punctuation">.</span>student<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//成员变量</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">private</span> String n<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//get&amp;set方法</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//成员方法</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//学生测试类</span><span class="token keyword">package</span> com<span class="token punctuation">.</span>student<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StudentDemo</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//创建对象</span>        Student s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//使用set</span>        s<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"咕咕咕"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        s<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        s<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//或者</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"---"</span><span class="token operator">+</span>s<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>运行结果：</p><p><img src="https://s2.loli.net/2022/03/29/FqElxezI1Qi7DSH.png"></p><blockquote><ol><li>this修饰的变量用于指代成员变量<ul><li>方法的形参如果与成员变量同名，不带this修饰的变量指的是形参，而不是成员变量；</li><li>方法的形参没有与成员变量同名，不带this修饰的变量指的是成员变量；</li></ul></li><li><strong>解决局部变量隐藏成员变量</strong>时用this；</li><li>this：代表所在类的对象引用<ul><li>方法被哪个对象调用，this就代表哪个对象。</li></ul></li></ol></blockquote><h2 id="六、StringBuilder"><a href="#六、StringBuilder" class="headerlink" title="六、StringBuilder"></a>六、StringBuilder</h2><ol><li><p>使用方法：</p><p><code>StringBuilder 对象名 = new StringBuilder();</code></p></li><li><p>添加和反转方法</p><ul><li><code>public StringBuilder append(任意类型)</code>：添加数据，并返回对象本身；</li><li><code>public StringBuilder reverse()</code>：返回相反的字符序列。</li></ul></li><li><p>String和StringBuilder相互转换</p></li></ol><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>myString<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">myString</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//创建对象</span>        StringBuilder sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//空</span>        StringBuilder sb2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//带参数</span>        <span class="token comment" spellcheck="true">//添加</span>        sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>java<span class="token punctuation">)</span><span class="token punctuation">;</span>        sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>hello<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>world<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//因为返回的是对象，所以可以调用方法</span>        <span class="token comment" spellcheck="true">//反转</span>        sb<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//StringBuilder转换成String</span>        String s <span class="token operator">=</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//String转换成StringBuilder</span>        String a <span class="token operator">=</span> <span class="token string">"hello"</span><span class="token punctuation">;</span>        StringBuilder sb3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h2 id="七、ArrayList"><a href="#七、ArrayList" class="headerlink" title="七、ArrayList"></a>七、ArrayList</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//导包</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">myArrayList</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//创建一个空的集合对象</span>        ArrayList<span class="token operator">&lt;</span>String<span class="token operator">></span> array <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//JDK7以后可以写成这种形式：   ArrayList&lt;String> array=new ArrayList&lt;>();</span>        <span class="token comment" spellcheck="true">//public boolean add(E e):将指定元素追加到集合的末尾</span>        array<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        array<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//public void add(int index,E element):在集合指定位置加入元素</span>        array<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"你好"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//输出array</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p><strong>常用方法：</strong></p><p><img src="https://s2.loli.net/2022/04/02/A95RyVICtDHxTgX.png"></p><p><strong>注意：集合也有索引越界问题！</strong></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA常用快捷键</title>
      <link href="/2022/03/26/idea-chang-yong-kuai-jie-jian/"/>
      <url>/2022/03/26/idea-chang-yong-kuai-jie-jian/</url>
      
        <content type="html"><![CDATA[<h2 id="一、内容辅助键"><a href="#一、内容辅助键" class="headerlink" title="一、内容辅助键"></a>一、内容辅助键</h2><h3 id="1-快速生成语句"><a href="#1-快速生成语句" class="headerlink" title="1. 快速生成语句"></a>1. 快速生成语句</h3><ol><li><p>快速生成main( )方法：<code>psvm 回车</code></p></li><li><p>快速生成输出语句：<code>sout 回车</code></p></li></ol><h3 id="2-代码辅助"><a href="#2-代码辅助" class="headerlink" title="2. 代码辅助"></a>2. 代码辅助</h3><ol><li><code>Ctrl + Alt + space</code> （内容提示，代码补全）</li></ol><h2 id="二、IDEA快捷键"><a href="#二、IDEA快捷键" class="headerlink" title="二、IDEA快捷键"></a>二、IDEA快捷键</h2><h3 id="1-常用"><a href="#1-常用" class="headerlink" title="1. 常用"></a>1. 常用</h3><ol><li>格式化代码：<code>Ctrl + Alt + L</code></li><li>单行注释：选中代码   <code>Ctrl + /</code>   两次取消</li><li>多行注释：选中代码   <code>Ctrl + Shift /</code>   两次取消  </li><li>快速生成构造方法、set&#x2F;get方法等：<code>Alt + insert</code></li></ol><p>​    </p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> IDEA </tag>
            
            <tag> 快捷键 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Random随机数</title>
      <link href="/2022/03/25/random-sui-ji-shu/"/>
      <url>/2022/03/25/random-sui-ji-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="一、使用方法"><a href="#一、使用方法" class="headerlink" title="一、使用方法"></a>一、使用方法</h2><ol><li><p>导包</p><p><code>import java.util.Random;</code></p><blockquote><p><strong>注意：</strong>导包的动作必须出现在类定义的上面！</p></blockquote></li><li><p>创建对象</p><p><code>Random r = new Random();</code></p><blockquote><p>上面的格式中，r是变量名，可以更改，其他不可以更改。</p></blockquote></li><li><p>获取随机数</p><p><code>int num = r.nexInt(10);  //获取数据范围[0,10)</code></p><blockquote><p>上面的格式中，num为变量名，“10”表示范围；等号右面的“r”和步骤2中的“r”是对应的。</p></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java中的关键字</title>
      <link href="/2022/03/23/java-zhong-de-guan-jian-zi/"/>
      <url>/2022/03/23/java-zhong-de-guan-jian-zi/</url>
      
        <content type="html"><![CDATA[<h1 id="Java中的53个关键字"><a href="#Java中的53个关键字" class="headerlink" title="Java中的53个关键字"></a>Java中的53个关键字</h1><h3 id="一、-48个关键字"><a href="#一、-48个关键字" class="headerlink" title="一、 48个关键字"></a>一、 <strong>48个关键字</strong></h3><p><code>abstract</code>、<code>assert</code></p><p><code>boolean</code>、<code>break</code>、<code>byte</code></p><p><code>case</code>、<code>catch</code>、<code>char</code>、<code>class</code>、<code>continue</code></p><p><code>default</code>、<code>do</code>、<code>double</code></p><p><code>else</code>、<code>enum</code>、<code>extends</code></p><p><code>final</code>、<code>finally</code>、<code>float</code>、<code>for</code></p><p><code>if</code>、<code>implements</code>、<code>import</code>、<code>int</code>、<code>interface</code>、<code>instanceof</code></p><p><code>long</code></p><p><code>native</code>、<code>new</code></p><p><code>package</code>、<code>private</code>、<code>protected</code>、<code>public</code></p><p><code>return</code></p><p><code>short</code>、<code>static</code>、<code>strictfp</code>、<code>super</code>、<code>switch</code>、<code>synchronized</code></p><p><code>this</code>、<code>throw</code>、<code>throws</code>、<code>transient</code>、<code>try</code></p><p><code>void</code>、<code>volatile</code></p><p><code>while</code></p><h3 id="二、2个保留字"><a href="#二、2个保留字" class="headerlink" title="二、2个保留字"></a>二、2个保留字</h3><p><code>goto</code>、<code>const</code></p><blockquote><p>现在没用以后可能用到作为关键字</p></blockquote><h3 id="三、3个特殊直接量"><a href="#三、3个特殊直接量" class="headerlink" title="三、3个特殊直接量"></a>三、3个特殊直接量</h3><p><code>true</code>、<code>false</code>、<code>null</code></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java—字符的“+”操作</title>
      <link href="/2022/03/22/java-zi-fu-de-cao-zuo/"/>
      <url>/2022/03/22/java-zi-fu-de-cao-zuo/</url>
      
        <content type="html"><![CDATA[<h2 id="一、字符的-操作"><a href="#一、字符的-操作" class="headerlink" title="一、字符的 + 操作"></a>一、字符的 + 操作</h2><p>将字符型的变量与数字型的变量相加时，是用字符在计算机底层<strong>对应的数值（ASCII码）</strong>来进行计算的。</p><p>算数表达式中<strong>包含多个基本数据类型</strong>的值的时候，整个算术表达式的<strong>类型</strong>会<strong>自动进行提升</strong>。</p><p><strong>提升规则：</strong></p><ul><li>byte类型、short类型和char类型将被提升到int类型；</li><li>整个表达式的类型自动提升到表达式中<strong>最高等级操作数</strong>同样的类型，等级顺序：<code>byte、short、char &lt; int &lt; long &lt; float &lt; double</code>；</li></ul><h2 id="二、字符串的-操作"><a href="#二、字符串的-操作" class="headerlink" title="二、字符串的 + 操作"></a>二、字符串的 + 操作</h2><p>测试代码：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>company<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"ci"</span><span class="token operator">+</span><span class="token string">"kian"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"cikian"</span><span class="token operator">+</span><span class="token number">666</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">666</span><span class="token operator">+</span><span class="token string">"cikian"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"cikian"</span><span class="token operator">+</span><span class="token number">6</span><span class="token operator">+</span><span class="token number">66</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token operator">+</span><span class="token number">66</span><span class="token operator">+</span><span class="token string">"cikian"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//先进行算术运行，在进行连接操作</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>测试结果：</p><p><img src="https://s2.loli.net/2022/03/22/7R24KmOX5yfqkjB.png"></p><p><strong>总结：</strong></p><ul><li><p>当“+”操作出现在字符串之间时，“+”代表<strong>字符串连接符</strong>，而非算术运算；</p></li><li><p>出现连续“+”操作时，<strong>从左到右依次执行</strong>。</p><p>（这里注意一下，从左到右依次执行时，如果像“测试代码”中有注释的代码那样，会先进行算术运算，遇到字符串时再进行连接操作，遇到字符串后，其后方的<strong>所有数字或者字符串都执行连接操作</strong>，<strong>不再进行算数运算。</strong></p><p>如：<code>System.out.println(6+66+&quot;cikian&quot;+6+66+666);</code>这句代码输出的是：<code>72cikian666666</code>。）</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java—类型转换</title>
      <link href="/2022/03/21/java-lei-xing-zhuan-huan/"/>
      <url>/2022/03/21/java-lei-xing-zhuan-huan/</url>
      
        <content type="html"><![CDATA[<h2 id="一、自动类型转换"><a href="#一、自动类型转换" class="headerlink" title="一、自动类型转换"></a>一、自动类型转换</h2><p>把一个表示数据<strong>范围小的数值</strong>或者<strong>变量</strong>赋值给另一个表示数据<strong>范围大的变量</strong>。</p><p><strong>※表示范围从小到大：</strong></p><p><img src="https://s2.loli.net/2022/03/21/xnmoIYrADGFcOkM.png"></p><p>测试代码：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>company<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 自动类型转换</span>        <span class="token keyword">int</span> a<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">double</span> b<span class="token operator">=</span>a<span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>测试结果：</p><p><img src="https://s2.loli.net/2022/03/21/dZJgc2pjA1YiWyP.png"></p><h2 id="二、强制类型转换"><a href="#二、强制类型转换" class="headerlink" title="二、强制类型转换"></a>二、强制类型转换</h2><p>把一个表示数据<strong>范围大的数值</strong>或者<strong>变量</strong>赋值给另一个表示数据<strong>范围小的变量</strong>。</p><ol><li>格式：<code>目标数据类型 变量名 = (目标数据类型)值或者变量;</code></li><li>如：<code>int k = (int)3.14;</code></li></ol><p>测试代码：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>company<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 强制类型转换</span>        <span class="token keyword">int</span> a<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token number">3.14</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>测试结果：</p><p><img src="https://s2.loli.net/2022/03/21/kq5HSLPge1moDiu.png"></p><p><strong>强制类型转换一般不建议使用</strong></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java语言跨平台原理</title>
      <link href="/2022/03/20/java-yu-yan-kua-ping-tai-yuan-li/"/>
      <url>/2022/03/20/java-yu-yan-kua-ping-tai-yuan-li/</url>
      
        <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2022/03/20/igvBVGqbIsQdlOx.png"></p><h2 id="一、平台和跨平台"><a href="#一、平台和跨平台" class="headerlink" title="一、平台和跨平台"></a>一、平台和跨平台</h2><p>我们这里所说的<strong>“平台”</strong>指的是操作系统，如我们常见的Windows、MacOS、Linux等。</p><p>而<strong>“跨平台”</strong>指的是同样的Java程序可以在所有平台上面运行，<strong>并且运行结果相同</strong>。</p><h2 id="二、跨平台原理"><a href="#二、跨平台原理" class="headerlink" title="二、跨平台原理"></a>二、跨平台原理</h2><p>举个例子：有三个人A,B,C，A只会说并且只听得懂a语言，B只会说并且只听得懂b语言，C只会说并且只听得懂c语言，如果A想和B、C交流，那么他们直接对话是行不通的，因为他们说的话互相都听不懂。那么，如果他们之间一定要交流，此时在他们之间就需要一个“翻译”把他们之间说的话翻译成对方能听懂的话。</p><p>这里面，A、B、C就相当于不同的平台，他们说的话相当于运行的程序，如果没有任何处理，Windows平台的程序是不能直接运行在MacOS或者Linux上的。</p><p>而Java之所以能<strong>“跨平台”</strong>运行，是因为<strong>JVM（Java虚拟机）</strong>的存在，JVM在不同平台间就充当着“翻译”的角色。</p><p>我们只需要针对不同的平台安装不同的JVM，便可在不同的平台运行相同的代码，并且得到相同的结果。</p><h2 id="三、注意"><a href="#三、注意" class="headerlink" title="三、注意"></a>三、注意</h2><ol><li>跨平台运行不是Java程序能在所有的平台上运行，关键是该平台是否能安装相应的虚拟机，也就是能不能找到对应的“翻译”；</li><li>Java源程序经过编译器编译后变成字节码（.class文件，Android 中是 .dex文件），字节码由JVM解释执行，<strong>字节码只面向虚拟机</strong>，虚拟机将每一条要执行的字节码送给解释器，解释器将其翻译成特定机器上的机器码（二进制码），然后在特定的机器上运行。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue基础</title>
      <link href="/2022/03/12/vue-ji-chu/"/>
      <url>/2022/03/12/vue-ji-chu/</url>
      
        <content type="html"><![CDATA[<h1 id="VUE-基础"><a href="#VUE-基础" class="headerlink" title="VUE 基础"></a>VUE 基础</h1><h2 id="一、导入使用"><a href="#一、导入使用" class="headerlink" title="一、导入使用"></a>一、导入使用</h2><p>在HTML文件中使用以下代码</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>例如：</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>vue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        {{ message };};    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            el<span class="token punctuation">:</span> <span class="token string">"#app"</span><span class="token punctuation">,</span>            data<span class="token punctuation">:</span> <span class="token punctuation">{</span>                message<span class="token punctuation">:</span> <span class="token string">" hello Vue! "</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="二、el挂载点"><a href="#二、el挂载点" class="headerlink" title="二、el挂载点"></a>二、el挂载点</h2><ol><li><strong>作用：设置Vue实例挂载（管理）的元素；</strong></li><li>支持除&lt;body&gt; ,&lt;html&gt;以外的双标签，不支持单标签；</li><li>可以使用其他选择器，但是推荐使用id选择器。</li><li>作用范围：选中标签的内部，包括子元素；</li></ol><h2 id="三、data数据对象"><a href="#三、data数据对象" class="headerlink" title="三、data数据对象"></a>三、data数据对象</h2><ol><li>Vue中的数据定义在data中；</li><li>data中可以写复杂类型的数据；</li><li>渲染复杂类型数据时，遵守JS语法即可。</li></ol><p>如：</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>vue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        {{ message };};        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span> {{ msCikian.name };}; {{ msCikian.home };}; <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span> {{ tags[0] };}; <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span> {{ tags[1] };}; <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span> {{ tags[2] };}; <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            el<span class="token punctuation">:</span> <span class="token string">"#app"</span><span class="token punctuation">,</span>            data<span class="token punctuation">:</span> <span class="token punctuation">{</span>                message<span class="token punctuation">:</span> <span class="token string">" hello Vue! "</span><span class="token punctuation">,</span>                msCikian<span class="token punctuation">:</span> <span class="token punctuation">{</span>                    name<span class="token punctuation">:</span> <span class="token string">"Cikian"</span><span class="token punctuation">,</span>                    home<span class="token punctuation">:</span> <span class="token string">"www.cikian.cn"</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>                tags<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"html"</span><span class="token punctuation">,</span> <span class="token string">"css"</span><span class="token punctuation">,</span> <span class="token string">"JavaScript"</span><span class="token punctuation">]</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>效果：</p><p><img src="https://s2.loli.net/2022/03/10/ajrX9tnEGbIdol7.png"></p><h2 id="四、本地应用（使用Vue指令）"><a href="#四、本地应用（使用Vue指令）" class="headerlink" title="四、本地应用（使用Vue指令）"></a>四、本地应用（使用Vue指令）</h2><h3 id="1-v-text（设置标签的文本值）"><a href="#1-v-text（设置标签的文本值）" class="headerlink" title="1. v-text（设置标签的文本值）"></a>1. v-text（设置标签的文本值）</h3><p>使用方法：</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>vue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>message<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>这里会被覆盖<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span> {{ message };}; 这里不会被覆盖<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            el<span class="token punctuation">:</span> <span class="token string">"#app"</span><span class="token punctuation">,</span>            data<span class="token punctuation">:</span> <span class="token punctuation">{</span>                message<span class="token punctuation">:</span> <span class="token string">" hello Vue! "</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>显示效果：</p><p><img src="https://s2.loli.net/2022/03/10/6QgEbCYB4w8XLrx.png"></p><p><strong>注意：</strong>使用v-text时，会将标签内部的内容覆盖并且替换成对应的内容，若不希望内容被覆盖，则不可使用v-text的写法，两种写法都支持表达式，如：<code>v-text=&quot;message + ‘！’&quot;</code>，<code>&#123;&#123; message + “！” &#125;&#125;</code>。</p><h3 id="2-v-html（设置标签的innerHTML）"><a href="#2-v-html（设置标签的innerHTML）" class="headerlink" title="2. v-html（设置标签的innerHTML）"></a>2. v-html（设置标签的innerHTML）</h3><ol><li>v-html指令的作用是设置元素的innerHTML；</li><li>内容中有html结构会被解析为标签；</li><li>如果内容只是文字，则v-html和v-text的作用一样。</li></ol><p>如：</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>vue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">v-html</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>message<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            el<span class="token punctuation">:</span> <span class="token string">"#app"</span><span class="token punctuation">,</span>            data<span class="token punctuation">:</span> <span class="token punctuation">{</span>                message<span class="token punctuation">:</span> <span class="token string">"&lt;a href='https://www.cikian.cn'>Cikian&lt;/a>"</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="3-v-on（绑定事件）"><a href="#3-v-on（绑定事件）" class="headerlink" title="3. v-on（绑定事件）"></a>3. v-on（绑定事件）</h3><ol><li>v-on指令的作用是为元素绑定事件；</li><li>绑定的方法（事件）定义在methods属性中；</li><li>方法内部通过<strong>this</strong>关键字可以访问定义在<strong>data</strong>中的数据。</li></ol><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>vue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>doIt<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>doIt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            el<span class="token punctuation">:</span> <span class="token string">"#app"</span><span class="token punctuation">,</span>            data<span class="token punctuation">:</span> <span class="token punctuation">{</span>                words<span class="token punctuation">:</span> <span class="token string">"hello world!"</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>                doIt<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>words<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><strong>v-on</strong>指令可以简写：</p><p>如：</p><p><code>&lt;button v-on:click=&quot;doIt&quot;&gt;doIt&lt;/button&gt;</code></p><p>可以简写为：</p><p><code>&lt;button @click=&quot;doIt&quot;&gt;doIt&lt;/button&gt;</code></p><p><strong>传递自定义参数，事件修饰符：</strong></p><p><strong>自定义参数：</strong>需要传递参数时，要在定义的方法中定义形参，如：<code>doit: function (p1,p2,...)&#123; &#125;</code>，相对应的，在调用方法时，使用实参给形参传递数据，如：<code>@click=&quot;doit (p1,p2,...)&quot;</code></p><p><strong>事件修饰符：</strong>如绑定一个按钮事件 <code>@keyup</code>，如果不使用修饰符，那么按下一个按键就会触法，显然，这样的需求很少，那么此时便需要事件修饰符来限制具体按哪一个按键才会触发，如：<code>@keyup.enter</code> 按下回车键触发，更多修饰符，参考官方文档：<a href="https://cn.vuejs.org/v2/api/#v-on">API — Vue.js (vuejs.org)</a></p><h3 id="4-案例：计数器"><a href="#4-案例：计数器" class="headerlink" title="4. 案例：计数器"></a>4. 案例：计数器</h3><p>代码：</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>vue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token id">#app</span> </span><span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">500</span>px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>        <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px <span class="token hexcode">#000</span> solid<span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">15</span>px<span class="token punctuation">;</span>        <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token selector">;        button </span><span class="token punctuation">{</span>        <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">150</span>px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span><span class="token number">247</span>, <span class="token number">65</span>, <span class="token number">65</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token selector">;        span </span><span class="token punctuation">{</span>        <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>        <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>        <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sub<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>-<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span> {{ num };}; <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>add<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            el<span class="token punctuation">:</span> <span class="token string">"#app"</span><span class="token punctuation">,</span>            data<span class="token punctuation">:</span> <span class="token punctuation">{</span>                num<span class="token punctuation">:</span> <span class="token number">1</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>                add<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>num <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>num<span class="token operator">++</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"不能再加啦~"</span><span class="token punctuation">)</span>                    <span class="token punctuation">}</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>                sub<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>num <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>num<span class="token operator">--</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"不能再减啦~"</span><span class="token punctuation">)</span>                    <span class="token punctuation">}</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>效果：<a href="https://blog.cikian.cn/counter/counter.html">计数器效果</a></p><p><img src="https://s2.loli.net/2022/03/11/OSh79Fd42RUjDsK.png"></p><h3 id="5-v-show（切换元素显示与隐藏）"><a href="#5-v-show（切换元素显示与隐藏）" class="headerlink" title="5. v-show（切换元素显示与隐藏）"></a>5. v-show（切换元素显示与隐藏）</h3><ol><li>v-show指令的作用是根据真假切换元素的显示状态；</li><li>原理是修改元素的display，实现显示与隐藏；</li><li>指令后面的内容，最终都会被解析为布尔值；</li><li>值为true元素显示，false元素隐藏；</li><li>数据改变之后，对应元素的显示状态会同步更新。</li></ol><h3 id="6-v-if（操纵dom元素）"><a href="#6-v-if（操纵dom元素）" class="headerlink" title="6. v-if（操纵dom元素）"></a>6. v-if（操纵dom元素）</h3><ol><li>v-if的效果与v-show效果相同，但实现原理不同；</li><li>v-if通过控制dom元素来达到显示或隐藏元素的效果，即直接再html文档中增加或删除元素；</li><li>当操作比较频繁时，建议使用v-show，因为操纵dom元素对性能的消耗比较大。</li></ol><h3 id="7-v-bind（操作元素属性）"><a href="#7-v-bind（操作元素属性）" class="headerlink" title="7. v-bind（操作元素属性）"></a>7. v-bind（操作元素属性）</h3><p>设置元素的属性，语法：<code>v-bind:属性名=表达式</code></p><ol><li>v-bind指令的作用是为元素绑定属性；</li><li>完整写法是<code>v-bind:属性名</code>，简写为<code>:属性名</code>；</li><li>需要动态的增删class建议使用对象的方式。</li></ol><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>vue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.word</span> </span><span class="token punctuation">{</span>        <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{word:cname};<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>文字内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>classT<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>给P标签添加组名改变字体颜色<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            el<span class="token punctuation">:</span> <span class="token string">"#app "</span><span class="token punctuation">,</span>            data<span class="token punctuation">:</span> <span class="token punctuation">{</span>                cname<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>                classT<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>cname <span class="token operator">=</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>cname<span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>效果：<a href="https://blog.cikian.cn/changeColor/changeColor.html">改变字体颜色</a></p><p><code>&lt;p v-bind:class=&quot;&#123;word:cname&#125;&quot;&gt;文字内容&lt;/p&gt;</code></p><p>可以简写为：</p><p><code>&lt;p :class=&quot;&#123;word:cname&#125;&quot;&gt;文字内容&lt;/p&gt;</code></p><p><code>&#123;word:cname&#125;</code>也可以使用三元表达式，解释一下这个表达式：<code>word</code>是要加上的属性值，<code>cname</code>为条件，为真时会添加属性值，否则不添加。</p><h3 id="案例：切换图片"><a href="#案例：切换图片" class="headerlink" title="案例：切换图片"></a>案例：切换图片</h3><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>图片切换<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fontawesome-free-6.0.0-web/css/all.min.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token id">#mask</span> </span><span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">640</span>px<span class="token punctuation">;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>        <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token selector">;        <span class="token class">.left</span> </span><span class="token punctuation">{</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">260</span>px<span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">.3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token selector">;        <span class="token class">.right</span> </span><span class="token punctuation">{</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">260</span>px<span class="token punctuation">;</span>        <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">.3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>图片切换<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>imgArr[index]<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>java:<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span> <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index!<span class="token punctuation">=</span>0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fas fa-chevron-left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>java:<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span> <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index&lt;imgArr.length-1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fas fa-chevron-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            el<span class="token punctuation">:</span> <span class="token string">"#mask "</span><span class="token punctuation">,</span>            data<span class="token punctuation">:</span> <span class="token punctuation">{</span>                imgArr<span class="token punctuation">:</span> <span class="token punctuation">[</span>                    <span class="token string">"img/13.jpg"</span><span class="token punctuation">,</span>                    <span class="token string">"img/14.jpg"</span><span class="token punctuation">,</span>                    <span class="token string">"img/15.jpg"</span><span class="token punctuation">,</span>                    <span class="token string">"img/16.jpg"</span><span class="token punctuation">,</span>                <span class="token punctuation">]</span><span class="token punctuation">,</span>                index<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>                left<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>index<span class="token operator">--</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>                right<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>index<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>效果：<a href="https://blog.cikian.cn/img-change/img-change.html">图片切换 </a></p><h3 id="8-v-for（响应式生成列表结构）"><a href="#8-v-for（响应式生成列表结构）" class="headerlink" title="8. v-for（响应式生成列表结构）"></a>8. v-for（响应式生成列表结构）</h3><ol><li>v-for指令的作用是根据数据生成列表结构；</li><li>数组经常和v-for结合使用；</li><li>语法是<code>(item,index) in 数据</code>，其中 <code>item</code> 为可更改的名称，<code>index</code> 为定义的索引名称，<code>数据</code> 为data中定义的数据；</li><li>item和index可以结合其他指令一起使用；</li><li>数组长度的更新会同步到页面上，是响应式的。</li></ol><h3 id="9-v-model（获取和设置表单元素的值）"><a href="#9-v-model（获取和设置表单元素的值）" class="headerlink" title="9. v-model（获取和设置表单元素的值）"></a>9. v-model（获取和设置表单元素的值）</h3><ol><li>v-model指令的作用是便捷的设置和获取表单元素的值；</li><li>绑定的数据会和表单元素值相关联；</li><li>绑定的数据和表单元素的值是双向绑定的关系，修改其中一个，另一个也会同步变化。</li></ol><p>使用方法：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>message<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            el<span class="token punctuation">:</span> <span class="token string">"#mask "</span><span class="token punctuation">,</span>            data<span class="token punctuation">:</span> <span class="token punctuation">{</span>                message<span class="token punctuation">:</span> <span class="token string">"hello world!"</span><span class="token punctuation">,</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><h3 id="案例：记事本"><a href="#案例：记事本" class="headerlink" title="案例：记事本"></a>案例：记事本</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content-type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html; charset<span class="token punctuation">=</span>UTF-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>记事本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content-type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html; charset<span class="token punctuation">=</span>UTF-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>robots<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>noindex, nofollow<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>googlebot<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>noindex, nofollow<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./css/index.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 主体区域 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todoapp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 输入框 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>记事本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>inputValue<span class="token punctuation">"</span></span> <span class="token attr-name">@keyup.enter</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>add<span class="token punctuation">"</span></span> <span class="token attr-name">autofocus</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>autofocus<span class="token punctuation">"</span></span> <span class="token attr-name">autocomplete</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>off<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>请输入任务<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>new-todo<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 列表区域 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo-list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>(item,no) in list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>view<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> {{ no+1 };};. <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span> {{ item };}; <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>destroy<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>remove<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 统计和清空 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span> <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list.length!<span class="token punctuation">=</span>0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo-count<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list.length!<span class="token punctuation">=</span>0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">></span></span>{{ list.length };};<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span> items left      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list.length!<span class="token punctuation">=</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>clear-completed<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>clear<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        Clear      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            el<span class="token punctuation">:</span> <span class="token string">"#todoapp"</span><span class="token punctuation">,</span>            data<span class="token punctuation">:</span> <span class="token punctuation">{</span>                list<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                inputValue<span class="token punctuation">:</span> <span class="token string">""</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>                add<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>inputValue<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>                remove<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>                clear<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>效果：<a href="https://blog.cikian.cn/notepad/index.html">记事本 (cikian.cn)</a></p><h2 id="五、网络应用"><a href="#五、网络应用" class="headerlink" title="五、网络应用"></a>五、网络应用</h2><h3 id="1-axios基本使用"><a href="#1-axios基本使用" class="headerlink" title="1. axios基本使用"></a>1. axios基本使用</h3><ol><li><p>导包：<code>&lt;script src=&quot;https://unpkg.com/axios/dist/axios.min.js&quot;&gt;&lt;/script&gt;</code></p></li><li><p>两种常见使用方法：</p><ol><li><p>get请求：</p><p><code>axios.get(文档提供的接口地址?查询字符串).then(function(response)&#123;&#125;,function(err)&#123;&#125;)</code></p><pre class=" language-js"><code class="language-js">axios<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>地址<span class="token operator">?</span>key1<span class="token operator">=</span>value1key2<span class="token operator">=</span>value2<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//key为文档提供的，value为具体传输的值</span><span class="token comment" spellcheck="true">//第一个function(response){};为请求成功的函数</span><span class="token comment" spellcheck="true">//第二个function(err){};为请求失败返回的函数</span></code></pre></li><li><p>post请求：</p><p><code>axios.post(文档提供的接口地址,&#123;查询字符串&#125;).then(function(response)&#123;&#125;,function(err)&#123;&#125;)</code></p></li></ol></li><li><p>接口示例：</p><ol><li><p>随机笑话的接口：<a href="https://autumnfish.cn/api/joke/list">https://autumnfish.cn/api/joke/list</a></p></li><li><p>注册用户接口：<a href="https://autumnfish.cn/api/user/reg">https://autumnfish.cn/api/user/reg</a></p></li><li><p>天气接口：<a href="http://wthrcdn.etouch.cn/weather_mini">http://wthrcdn.etouch.cn/weather_mini</a></p><p>请求方法：get</p><p>请求参数：city</p></li></ol></li></ol><p>例：</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!doctype html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://unpkg.com/axios/dist/axios.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">".get"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            axios<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"https://autumnfish.cn/api/joke/list?num=3"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">function</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">".post"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">"https://autumnfish.cn/api/user/reg"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                    username<span class="token punctuation">:</span> <span class="token string">"asdadfffr"</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">function</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>注意事项：</p><ol><li>axios必须先导入才可以使用；</li><li>使用get或post方法即可发送对应的请求；</li><li>then方法中的回调函数会在请求成功或者失败时触发；</li><li>通过回调函数的形参可以获取相应内容或错误信息。</li></ol><p><a href="https://github.com/axios/axios">官方文档</a></p><h3 id="2-axios-Vue"><a href="#2-axios-Vue" class="headerlink" title="2. axios + Vue"></a>2. axios + Vue</h3><ol><li>axios回调函数中的this已经改变，无法访问到data中数据，把this保存起来，回调函数中直接使用保存的this即可；</li><li>和本地应用最大的区别就是改变了数据来源。</li></ol><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!doctype html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>获取笑话<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>getJoke<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span> {{ joke };}; <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://unpkg.com/axios/dist/axios.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- &lt;script src="js/axios.js">&lt;/script> --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            el<span class="token punctuation">:</span> <span class="token string">"#app"</span><span class="token punctuation">,</span>            data<span class="token punctuation">:</span> <span class="token punctuation">{</span>                joke<span class="token punctuation">:</span> <span class="token string">"点击按钮试一试"</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>                getJoke<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">var</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>                    axios<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"https://autumnfish.cn/api/joke"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        that<span class="token punctuation">.</span>joke <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>效果：<a href="https://blog.cikian.cn/getjoke/joke.html">获取笑话 (cikian.cn)</a></p><h3 id="案例：查询天气"><a href="#案例：查询天气" class="headerlink" title="案例：查询天气"></a>案例：查询天气</h3><ol><li>axios回调函数中this指向改变了，需要额外保存一份；</li><li>服务器返回的数据比较复杂时，获取的时候需要注意层级结构。</li></ol><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zh-CN<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ie<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>天气<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>css/reset.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>css/index.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search_form<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>logo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Cikian<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form_group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>city<span class="token punctuation">"</span></span> <span class="token attr-name">@keyup.enter</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>searchWeather<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>input_txt<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>请输入查询的天气<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>input_sub<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>searchWeather<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          查 询        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hotkey<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>changeCity(hotCitys[0])<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{ hotCitys[0] };};<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>changeCity(hotCitys[1])<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{ hotCitys[1] };};<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>changeCity(hotCitys[2])<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{ hotCitys[2] };};<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>changeCity(hotCitys[3])<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{ hotCitys[3] };};<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>weather_list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item in weatherList<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>info_type<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>iconfont<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> {{ item.type };}; <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>feng<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> {{ item.fengxiang };}; <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>info_temp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>{{ item.low };};<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span> ~                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>{{ item.high };};<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>info_date<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>{{ item.date };};<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tips<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span> {{ tips };}; <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://unpkg.com/axios/dist/axios.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>js/main.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    el<span class="token punctuation">:</span> <span class="token string">"#app"</span><span class="token punctuation">,</span>    data<span class="token punctuation">:</span> <span class="token punctuation">{</span>        city<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        weatherList<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        tips<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>        hotCitys<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"北京"</span><span class="token punctuation">,</span> <span class="token string">"沧州"</span><span class="token punctuation">,</span> <span class="token string">"天津"</span><span class="token punctuation">,</span> <span class="token string">"秦皇岛"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>        searchWeather<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>            axios<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'http://wthrcdn.etouch.cn/weather_mini?city='</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>city<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">// console.log(response);</span>                    <span class="token comment" spellcheck="true">// console.log(response.data.data.forecast);</span>                    that<span class="token punctuation">.</span>weatherList <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>forecast<span class="token punctuation">;</span>                    that<span class="token punctuation">.</span>tips <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>ganmao<span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>        changeCity<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>city<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>city <span class="token operator">=</span> city<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">searchWeather</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span></code></pre><p>效果：<a href="http://blog.cikian.cn/weather/index.html">天气 (cikian.cn)</a></p><h2 id="六、综合应用"><a href="#六、综合应用" class="headerlink" title="六、综合应用"></a>六、综合应用</h2><h3 id="1-音乐查询"><a href="#1-音乐查询" class="headerlink" title="1. 音乐查询"></a>1. 音乐查询</h3><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zh-CN<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ie<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>音乐<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 样式 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./css/index.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>play_wrap<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>player<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search_bar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>images/favicon.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>45px<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                <span class="token comment" spellcheck="true">&lt;!-- 搜索歌曲 --></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">autocomplete</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>off<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>query<span class="token punctuation">'</span></span> <span class="token attr-name">@keyup.enter</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>searchMusic();<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center_con<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token comment" spellcheck="true">&lt;!-- 搜索歌曲列表 --></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>song_wrapper<span class="token punctuation">'</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>song_wrapper<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>song_list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item in musicList<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token comment" spellcheck="true">&lt;!-- 点击放歌 --></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>playMusic(item.id)<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>{{item.name};};<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>playMv(item.mvid)<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.mvid!<span class="token punctuation">=</span>0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>images/line.png<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>switch_btn<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token comment" spellcheck="true">&lt;!-- 歌曲信息容器 --></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>player_con<span class="token punctuation">"</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{playing:isPlay};<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>images/player_bar.png<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>play_bar<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                    <span class="token comment" spellcheck="true">&lt;!-- 黑胶碟片 --></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>images/disc.png<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>disc autoRotate<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>coverUrl<span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">'</span><span class="token punctuation">'</span>?<span class="token punctuation">'</span>./images/cover.png<span class="token punctuation">'</span>:coverUrl<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cover autoRotate<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token comment" spellcheck="true">&lt;!-- 评论容器 --></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>comment_wrapper<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>comment_wrapper<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>title<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>热门留言<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>comment_list<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item in hotComments<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.user.avatarUrl<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{item.user.nickname};};<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>detail<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                {{item.content};};                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>images/line.png<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right_line<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>audio_con<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>audio<span class="token punctuation">'</span></span> <span class="token attr-name">@play</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>play<span class="token punctuation">"</span></span> <span class="token attr-name">@pause</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pause<span class="token punctuation">"</span></span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>musicUrl<span class="token punctuation">"</span></span> <span class="token attr-name">controls</span> <span class="token attr-name">autoplay</span> <span class="token attr-name">loop</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>myaudio<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>video_con<span class="token punctuation">"</span></span> <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showVideo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>video<span class="token punctuation">'</span></span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mvUrl<span class="token punctuation">"</span></span> <span class="token attr-name">controls</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>controls<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>closeMv<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 官网提供的 axios 在线地址 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://unpkg.com/axios/dist/axios.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">// 设置axios的基地址</span>        axios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>baseURL <span class="token operator">=</span> <span class="token string">'https://autumnfish.cn'</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// axios.defaults.baseURL = 'http://localhost:3000';</span>        <span class="token comment" spellcheck="true">// 实例化vue</span>        <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            el<span class="token punctuation">:</span> <span class="token string">"#player"</span><span class="token punctuation">,</span>            data<span class="token punctuation">:</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 搜索关键字</span>                query<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>                <span class="token comment" spellcheck="true">// 歌曲列表</span>                musicList<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token comment" spellcheck="true">// 歌曲url</span>                musicUrl<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>                <span class="token comment" spellcheck="true">// 是否正在播放</span>                isPlay<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                <span class="token comment" spellcheck="true">// 歌曲热门评论</span>                hotComments<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token comment" spellcheck="true">// 歌曲封面地址</span>                coverUrl<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>                <span class="token comment" spellcheck="true">// 显示视频播放</span>                showVideo<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                <span class="token comment" spellcheck="true">// mv地址</span>                mvUrl<span class="token punctuation">:</span> <span class="token string">''</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>            <span class="token comment" spellcheck="true">// 方法</span>            methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 搜索歌曲</span>                <span class="token function">searchMusic</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>query <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">return</span>                    <span class="token punctuation">}</span><span class="token punctuation">;</span>                    axios<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/search?keywords='</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>query<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>response <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>                        <span class="token comment" spellcheck="true">// 保存内容</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>musicList <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>result<span class="token punctuation">.</span>songs<span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span>                    <span class="token comment" spellcheck="true">// 清空搜索</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>query <span class="token operator">=</span> <span class="token string">''</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>                <span class="token comment" spellcheck="true">// 播放歌曲</span>                <span class="token function">playMusic</span><span class="token punctuation">(</span>musicId<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">// 获取歌曲url</span>                    axios<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/song/url?id='</span> <span class="token operator">+</span> musicId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>response <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>                            <span class="token comment" spellcheck="true">// 保存歌曲url地址</span>                            <span class="token keyword">this</span><span class="token punctuation">.</span>musicUrl <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>url                        <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span>                        <span class="token comment" spellcheck="true">// 获取歌曲热门评论</span>                    axios<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/comment/hot?type=0&amp;id='</span> <span class="token operator">+</span> musicId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>response <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>                            <span class="token comment" spellcheck="true">// console.log(response)</span>                            <span class="token comment" spellcheck="true">// 保存热门评论</span>                            <span class="token keyword">this</span><span class="token punctuation">.</span>hotComments <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>hotComments                        <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span>                        <span class="token comment" spellcheck="true">// 获取歌曲封面</span>                    axios<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/song/detail?ids='</span> <span class="token operator">+</span> musicId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>response <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>                        <span class="token comment" spellcheck="true">// console.log(response)</span>                        <span class="token comment" spellcheck="true">// 设置封面</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>coverUrl <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>songs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>al<span class="token punctuation">.</span>picUrl                    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>                <span class="token comment" spellcheck="true">// audio的play事件</span>                <span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>isPlay <span class="token operator">=</span> <span class="token boolean">true</span>                        <span class="token comment" spellcheck="true">// 清空mv的信息</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>mvUrl <span class="token operator">=</span> <span class="token string">''</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>                <span class="token comment" spellcheck="true">// audio的pause事件</span>                <span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>isPlay <span class="token operator">=</span> <span class="token boolean">false</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>                <span class="token comment" spellcheck="true">// 播放mv</span>                <span class="token function">playMv</span><span class="token punctuation">(</span>vid<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>vid<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>showVideo <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                        <span class="token comment" spellcheck="true">// 获取mv信息</span>                        axios<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/mv/url?id='</span> <span class="token operator">+</span> vid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>response <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>                            <span class="token comment" spellcheck="true">// console.log(response)</span>                            <span class="token comment" spellcheck="true">// 暂停歌曲播放</span>                            <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>audio<span class="token punctuation">.</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                                <span class="token comment" spellcheck="true">// 获取mv地址</span>                            <span class="token keyword">this</span><span class="token punctuation">.</span>mvUrl <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>url                        <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span>                    <span class="token punctuation">}</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>                <span class="token comment" spellcheck="true">// 关闭mv界面</span>                <span class="token function">closeMv</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>showVideo <span class="token operator">=</span> <span class="token boolean">false</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>video<span class="token punctuation">.</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>                <span class="token comment" spellcheck="true">// 搜索历史记录中的歌曲</span>                <span class="token function">historySearch</span><span class="token punctuation">(</span>history<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>query <span class="token operator">=</span> history                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">searchMusic</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>showHistory <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>效果：<a href="https://blog.cikian.cn/musicplayer/index.html">音乐 (cikian.cn)</a></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL—SQL语言</title>
      <link href="/2022/03/06/mysql-sql-yu-yan/"/>
      <url>/2022/03/06/mysql-sql-yu-yan/</url>
      
        <content type="html"><![CDATA[<h2 id="一、通用语法"><a href="#一、通用语法" class="headerlink" title="一、通用语法"></a>一、通用语法</h2><ol><li><p>SQL语句可以单行或多行书写，以分号结尾；</p></li><li><p>SQL语句可以使用空格&amp;缩进来增强语句的可读性；</p></li><li><p>MySQL数据库的SQL语句不区分大小写，关键字建议使用大写；</p></li><li><p>注释：</p><ul><li><p>单行注释：–注释内容 或 #注释内容（MySQL特有）</p></li><li><p>多行注释：&#x2F;*注释内容*&#x2F;</p></li></ul></li></ol><h2 id="二、SQL语句分类"><a href="#二、SQL语句分类" class="headerlink" title="二、SQL语句分类"></a>二、SQL语句分类</h2><p><img src="https://img-upyun.cikian.cn/blog-img/2022-3/20220305171046.png"></p><h3 id="1-DDL语句—数据库操作"><a href="#1-DDL语句—数据库操作" class="headerlink" title="1.DDL语句—数据库操作"></a>1.DDL语句—数据库操作</h3><ol><li><p>查询</p><p>查询所有数据库<code>SHOW DATABASES;</code></p><p>查询当前数据库<code>SELECT DATABASE();</code></p></li><li><p>创建</p><p><code>CREATE DATABASE [IF NOT EXISTS] 数据库名 [DEFAULT CHARSET 字符集] [COLLATE 排序规则];</code></p><p>（中括号的内容可以省略，使用时不加中括号）</p></li><li><p>删除</p><p><code>DROP DATABASE [IF ESISTS] 数据库名;</code></p></li><li><p>使用</p><p><code>USE 数据库名;</code></p></li></ol><h4 id="1-1-DDL表操作创建-amp-查询"><a href="#1-1-DDL表操作创建-amp-查询" class="headerlink" title="1.1 DDL表操作创建&amp;查询"></a>1.1 DDL表操作创建&amp;查询</h4><ol><li><p>查询当前数据库所有表</p><p><code>SHOW TABLES;</code></p></li><li><p>查询表结构</p><p><code>DESC 表名;</code></p></li><li><p>查询指定的建表语句</p><p><code>SHOW CREATE TABLE 表名;</code></p></li></ol><p><strong>1.1.1 DDL表操作—建表</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">(</span>    字段<span class="token number">1</span> 字段<span class="token number">1</span>类型<span class="token punctuation">[</span><span class="token keyword">COMMENT</span> 字段<span class="token number">1</span>注释<span class="token punctuation">]</span><span class="token punctuation">,</span>    字段<span class="token number">2</span> 字段<span class="token number">2</span>类型<span class="token punctuation">[</span><span class="token keyword">COMMENT</span> 字段<span class="token number">2</span>注释<span class="token punctuation">]</span><span class="token punctuation">,</span>    字段<span class="token number">3</span> 字段<span class="token number">3</span>类型<span class="token punctuation">[</span><span class="token keyword">COMMENT</span> 字段<span class="token number">3</span>注释<span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    字段n 字段n类型<span class="token punctuation">[</span><span class="token keyword">COMMENT</span> 字段n注释<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token keyword">COMMENT</span> 表注释<span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre><p><strong>1.1.2 DDL表操作—数据类型</strong></p><ol><li>数值类型</li></ol><p><img src="https://img-upyun.cikian.cn/blog-img/2022-3/20220305210648.png"></p><ol start="2"><li>字符串类型</li></ol><p><img src="https://img-upyun.cikian.cn/blog-img/2022-3/20220305211504.png"></p><p>char 和 varchar在使用时都需要指定字符串的长度，如<code>char(10);</code></p><ol start="3"><li>日期时间类型</li></ol><p><img src="https://img-upyun.cikian.cn/blog-img/2022-3/20220305212028.png"></p><p><strong>1.1.3 DDL表操作—修改</strong></p><ol><li><p>添加字段</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">ADD</span> 字段名 类型（长度）<span class="token punctuation">[</span><span class="token keyword">COMMENT</span> 注释<span class="token punctuation">]</span> <span class="token punctuation">[</span>约束<span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre></li><li><p>修改</p><ol><li><p>修改数据类型</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">MODIFY</span> 字段名 新数据类型（长度）<span class="token punctuation">;</span></code></pre></li><li><p>修改字段名和字段类型</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 CHANGE 旧字段名 新字段名 类型（长度） <span class="token punctuation">[</span><span class="token keyword">COMMENT</span> 注释<span class="token punctuation">]</span> <span class="token punctuation">[</span>约束<span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre></li></ol></li><li><p>删除字段</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">DROP</span> 字段名<span class="token punctuation">;</span></code></pre></li><li><p>修改表名</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">RENAME</span> <span class="token keyword">TO</span> 新表名<span class="token punctuation">;</span></code></pre></li><li><p>删除表</p><ol><li><p>删除表</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token punctuation">[</span><span class="token keyword">IF</span> <span class="token keyword">EXISTS</span><span class="token punctuation">]</span> 表名<span class="token punctuation">;</span></code></pre></li><li><p>删除指定表，并重新创建该表</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">TRUNCATE</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">;</span></code></pre></li></ol></li></ol><h3 id="2-DML语句—数据操作"><a href="#2-DML语句—数据操作" class="headerlink" title="2.DML语句—数据操作"></a>2.DML语句—数据操作</h3><h4 id="2-1-添加数据（INSERT）"><a href="#2-1-添加数据（INSERT）" class="headerlink" title="2.1 添加数据（INSERT）"></a>2.1 添加数据（INSERT）</h4><ol><li><p>给指定字段添加数据</p><p><code>INSERT INTO 表名 (字段名1,字段名2,...) VALUES(值1,值2,...);</code></p></li><li><p>给全部字段添加数据</p><p><code>INSERT INTO 表名 VALUES(值1,值2,...);</code></p></li><li><p>批量添加数据</p><p><code>INSERT INTO 表名 (字段名1,字段名2,...) VALUES(值1,值2,...),(值1,值2,...),(值1,值2,...);</code></p><p><code>INSERT INTO 表名 VALUES(值1,值2,...),(值1,值2,...),(值1,值2,...);</code></p></li></ol><p><strong>注意：</strong></p><ul><li>插入数据时，指定字段顺序需要与值的顺序是一一对应的；</li><li>字符串和日期型数据应该包含在引号中；</li><li>插入的数据大小，应该在字段的规定范围内。</li></ul><h4 id="2-2-修改数据（UPDATE）"><a href="#2-2-修改数据（UPDATE）" class="headerlink" title="2.2 修改数据（UPDATE）"></a>2.2 修改数据（UPDATE）</h4><p><code>UPDATE 表名 SET 字段名1=值1,字段名2=值2,...[WHERE 条件];</code></p><p><strong>注意：</strong>修改语句的条件可以有，也可以没有，如果没有条件，则会修改整张表的全部数据。</p><h4 id="2-3-删除数据（DELETE）"><a href="#2-3-删除数据（DELETE）" class="headerlink" title="2.3 删除数据（DELETE）"></a>2.3 删除数据（DELETE）</h4><p><code>DELETE FROM 表名 [WHERE 条件];</code></p><p><strong>注意：</strong></p><ul><li>DELETE语句的条件可以有，也可以没有，如果没有条件，则会删除整张表的全部数据；</li><li>DELETE语句不能删除某一个字段的值（可以使用updata）。</li></ul><h3 id="3-DQL语句—数据查询"><a href="#3-DQL语句—数据查询" class="headerlink" title="3.DQL语句—数据查询"></a>3.DQL语句—数据查询</h3><h4 id="3-1-语法结构"><a href="#3-1-语法结构" class="headerlink" title="3.1 语法结构"></a>3.1 语法结构</h4><ol><li><p>基本查询</p><ul><li><code>SELECT</code>字段列表</li><li><code>FROM</code>表名列表</li></ul></li><li><p>条件查询</p><ul><li><code>WHERE</code>条件列表</li></ul></li><li><p>分组查询</p><p>聚合函数（count、max、min、avg、sum）</p><ol><li><code>GROUP BY</code>分组字段列表</li><li><code>HAVING</code>分组后条件列表</li></ol></li><li><p>排序查询</p><ul><li><code>ORDER BY</code>排序字段列表</li></ul></li><li><p>分页查询</p><ul><li><code>LIMIT</code>分页参数</li></ul></li></ol><h5 id="3-1-1-基本查询"><a href="#3-1-1-基本查询" class="headerlink" title="3.1.1 基本查询"></a>3.1.1 基本查询</h5><ol><li><p>查询多个字段</p><p><code>SELECT 字段1,字段2,字段3,...FROM 表名;</code></p><p><code>SELECT * FROM 表名;</code></p></li><li><p>设置别名</p><p><code>SELECT 字段1 [AS 别名1],字段2 [AS 别名2]...FROM 表名;</code></p></li><li><p>去除重复记录</p><p><code>SELECT DISTINCT 字段列表 FROM 表名;</code></p></li></ol><h5 id="3-1-2-条件查询"><a href="#3-1-2-条件查询" class="headerlink" title="3.1.2 条件查询"></a>3.1.2 条件查询</h5><ol><li><p>语法</p><p><code>SELETE 字段列表 FROM 表名 WHERE 条件列表;</code></p></li><li><p>条件</p><p><img src="https://img-upyun.cikian.cn/blog-img/2022-3/20220306170208.png"></p><p><img src="https://img.cikian.cn/blog-img/20220306170246.png"></p></li></ol><h5 id="3-1-3-聚合函数"><a href="#3-1-3-聚合函数" class="headerlink" title="3.1.3 聚合函数"></a>3.1.3 聚合函数</h5><ol><li><p>介绍：将一列数据作为一个整体，进行纵向计算。</p></li><li><p>常见的聚合函数：</p><p><img src="https://img-upyun.cikian.cn/blog-img/2022-3/20220306170947.png"></p></li><li><p>语法：</p><p><code>SELECT 聚合函数(字段列表) FROM 表名;</code></p><p><strong>注意：</strong>null值不参与所有聚合函数运算</p></li></ol><h5 id="3-1-4-分组查询"><a href="#3-1-4-分组查询" class="headerlink" title="3.1.4 分组查询"></a>3.1.4 分组查询</h5><ol><li><p>语法：</p><p><code>SELETE 字段列表 FROM 表名 [WHERE 条件] GROUP BY 分组字段名 [HAVING 分组后过滤条件];</code></p></li><li><p>WHERE 与 HAVING的区别：</p><ol><li>执行时机不同：where是分组之前进行过滤，不满足where条件，不参与分组；而having是分组之后对结果进行过滤。</li><li>判断条件不同：where不能对聚合函数进行判断，而having可以。</li></ol></li><li><p>注意：</p><ul><li>执行顺序：where &gt; 聚合函数 &gt; having</li><li>分组之后，查询的字段一般为聚合函数和分组字段，查询其他字段无意义</li></ul></li></ol><h5 id="3-1-5-排序查询"><a href="#3-1-5-排序查询" class="headerlink" title="3.1.5 排序查询"></a>3.1.5 排序查询</h5><ol><li><p>语法：</p><p><code>SELETE 字段列表 FROM 表名 ORDER BY 字段1 排序方式1,字段2 排序方式2;</code></p></li><li><p>排序方式：</p><ul><li>ASC 升序（默认值）</li><li>DESC 降序</li></ul></li><li><p>注意：如果是多字段排序，当第一个字段相同时，才会根据第二个字段进行排序。</p></li></ol><h5 id="3-1-6-分页查询"><a href="#3-1-6-分页查询" class="headerlink" title="3.1.6 分页查询"></a>3.1.6 分页查询</h5><ol><li><p>语法：</p><p><code>SELETE 字段列表 FROM 表名 LIMIT 起始索引,查询记录数;</code></p></li><li><p>注意：</p><ul><li>起始索引从0开始，起始索引 &#x3D; (查询页码 - 1) * 每页显示记录数。</li><li>分页查询是数据库的“方言”，不同的数据库有不同的实现，MySQL中是LIMIT。</li><li>如果查询的是第一页数据，起始索引可以省略，直接简写为limit 10。</li></ul></li></ol><h4 id="3-2-执行顺序"><a href="#3-2-执行顺序" class="headerlink" title="3.2 执行顺序"></a>3.2 执行顺序</h4><p><strong>FROM → WHERE → GROUP BY → SELECT → ORDER BY → LIMIT</strong></p><h3 id="4-DCL语句—数据控制（管理用户）"><a href="#4-DCL语句—数据控制（管理用户）" class="headerlink" title="4. DCL语句—数据控制（管理用户）"></a>4. DCL语句—数据控制（管理用户）</h3><h4 id="4-1-用户管理"><a href="#4-1-用户管理" class="headerlink" title="4.1 用户管理"></a>4.1 用户管理</h4><h5 id="4-1-1-查询用户"><a href="#4-1-1-查询用户" class="headerlink" title="4.1.1 查询用户"></a>4.1.1 查询用户</h5><p><code>USE mysql;</code></p><p><code>SELETE USER * FROM user</code></p><h5 id="4-1-2-创建用户"><a href="#4-1-2-创建用户" class="headerlink" title="4.1.2 创建用户"></a>4.1.2 创建用户</h5><p><code>CREATE USER &#39;用户名&#39;@&#39;主机名&#39; IDENTIFIED BY &#39;密码&#39;;</code></p><h5 id="4-1-3-修改用户密码"><a href="#4-1-3-修改用户密码" class="headerlink" title="4.1.3 修改用户密码"></a>4.1.3 修改用户密码</h5><p><code>ALTER USER &#39;用户名&#39;@&#39;主机名&#39; IDENTIFIED WITH mysql_native_password BY &#39;新密码&#39;;</code></p><h5 id="4-1-4-删除用户"><a href="#4-1-4-删除用户" class="headerlink" title="4.1.4 删除用户"></a>4.1.4 删除用户</h5><p><code>DROP USER &#39;用户名&#39;@&#39;主机名&#39;;</code></p><h4 id="4-2-权限控制"><a href="#4-2-权限控制" class="headerlink" title="4.2 权限控制"></a>4.2 权限控制</h4><h5 id="4-2-1-常用权限列表"><a href="#4-2-1-常用权限列表" class="headerlink" title="4.2.1 常用权限列表"></a>4.2.1 常用权限列表</h5><p><img src="https://img-upyun.cikian.cn/blog-img/2022-3/20220306182903.png"></p><h5 id="4-2-2-查询权限"><a href="#4-2-2-查询权限" class="headerlink" title="4.2.2 查询权限"></a>4.2.2 查询权限</h5><p><code>SHOW GRANTS FOR &#39;用户名&#39;@&#39;主机名&#39;;</code></p><h5 id="4-2-3-授予权限"><a href="#4-2-3-授予权限" class="headerlink" title="4.2.3 授予权限"></a>4.2.3 授予权限</h5><p><code>GRANT 权限列表 ON 数据库名.表名 TO &#39;用户名&#39;@&#39;主机名&#39;;</code></p><h5 id="4-2-4-撤销权限"><a href="#4-2-4-撤销权限" class="headerlink" title="4.2.4 撤销权限"></a>4.2.4 撤销权限</h5><p><code>REVOKE 权限列表 ON 数据库名.表名 FROM &#39;用户名&#39;@&#39;主机名&#39;;</code></p><p><strong>注意：</strong> </p><ol><li>多个权限之间，使用逗号分隔；</li><li>授权时，数据库名和表名可以使用*进行通配，代表所有。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL—图形化界面工具DataGrip</title>
      <link href="/2022/03/06/mysql-tu-xing-hua-jie-mian-gong-ju-datagrip/"/>
      <url>/2022/03/06/mysql-tu-xing-hua-jie-mian-gong-ju-datagrip/</url>
      
        <content type="html"><![CDATA[<h2 id="一、下载"><a href="#一、下载" class="headerlink" title="一、下载"></a>一、下载</h2><p>由于DataGrip为收费软件，但是可以试用30天，<a href="https://www.jetbrains.com/datagrip/">DataGrip官网</a></p><h2 id="二、安装"><a href="#二、安装" class="headerlink" title="二、安装"></a>二、安装</h2><p>打开安装包，点击next后选择安装位置</p><p><img src="https://img-upyun.cikian.cn/blog-img/2022-3/20220305231057.png"></p><p>然后点击next→install，等待安装</p><p>启动软件后，如图选择</p><p><img src="https://img-upyun.cikian.cn/blog-img/2022-3/20220305231609.png"></p><h2 id="三、使用"><a href="#三、使用" class="headerlink" title="三、使用"></a>三、使用</h2><p>点击New Project，输入名称，点击OK</p><p><img src="https://img-upyun.cikian.cn/blog-img/2022-3/image-20220305231805725.png"></p><p>然后点击弹出窗口左上角的+号 →Data Source→MySQL</p><p><img src="https://img-upyun.cikian.cn/blog-img/2022-3/image-20220305232111754.png"></p><p>在之后的弹出窗口中，只需输入用户名和密码就好，如果在下方图片的下方红框处有<strong>download</strong>字样，需要下载（驱动程序），若没有或者下载完成之后，点击Test Connection</p><p><img src="https://img-upyun.cikian.cn/blog-img/2022-3/20220306001723.png"></p><p>测试之后，只要显示succeeded，便是成功</p><p><img src="https://img-upyun.cikian.cn/blog-img/2022-3/20220306002054.png"></p><p>然后点击apply，再点击ok</p><p><img src="https://img-upyun.cikian.cn/blog-img/2022-3/20220306002154.png"></p><h2 id="三、简单使用（创建数据库，创建表）"><a href="#三、简单使用（创建数据库，创建表）" class="headerlink" title="三、简单使用（创建数据库，创建表）"></a>三、简单使用（创建数据库，创建表）</h2><ol><li><p>创建数据库</p><p>右键单击，选择new→schema</p><p><img src="https://img-upyun.cikian.cn/blog-img/2022-3/20220306002447.png"></p></li><li><p>输入名称，点击ok</p><p><img src="https://img-upyun.cikian.cn/blog-img/2022-3/20220306002631.png"></p></li><li><p>创建表</p><p>新建完数据库后，可以在左侧看到，右键→new→table</p><p><img src="https://img-upyun.cikian.cn/blog-img/2022-3/20220306002755.png"></p><p>在之后的弹出窗口中点击加号，即可添加字段，输入名称，数据类型，注释等，点击execute</p><p><img src="https://img-upyun.cikian.cn/blog-img/2022-3/20220306003302.png"></p></li></ol><p>Data Grip的基本使用到此介绍结束，进阶的使用教程，可参见百度、B站等。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL—概述</title>
      <link href="/2022/03/05/mysql-gai-shu/"/>
      <url>/2022/03/05/mysql-gai-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="一、下载安装"><a href="#一、下载安装" class="headerlink" title="一、下载安装"></a>一、下载安装</h2><ol><li>下载地址（官方）：<a href="https://dev.mysql.com/downloads/installer/">MySQL Installer</a></li></ol><p><img src="https://s2.loli.net/2022/03/12/Oy9nNYUqw4FeJb5.png"></p><p>点击下载按钮，如果提示登录，就在登录按钮下方点击<strong>No thanks, just start my download.</strong></p><ol start="2"><li>安装</li></ol><p><img src="https://s2.loli.net/2022/03/12/aEgy6kOwCRMhjKv.png"></p><p>打开下载好的安装文件后，点击next，出现yes或者no选择yes</p><p>直到这一步，选择Execute，这一步需要等待一段时间</p><p><img src="https://s2.loli.net/2022/03/12/O3ejCminrKBHZkJ.png"></p><p>全部安装完成之后，全部点击next，直到出现下面的步骤</p><p><img src="https://s2.loli.net/2022/03/12/zFW5sipex8XtfYS.png"></p><p>在图中红框部分输入密码以及重复密码</p><p>然后全部点击next或者Execute</p><p>出现finish时点击，之后点击cancle→yes</p><h2 id="二、启动与停止"><a href="#二、启动与停止" class="headerlink" title="二、启动与停止"></a>二、启动与停止</h2><ol><li>打开系统服务，找到MySQL服务，启动或者停止</li><li>在命令行输入<code>net start mysql80</code>启动，输入<code>net stop mysql80</code>停止</li></ol><h2 id="三、客户端连接"><a href="#三、客户端连接" class="headerlink" title="三、客户端连接"></a>三、客户端连接</h2><ol><li><p>使用MySQL提供的客户端命令行工具</p><p><img src="https://s2.loli.net/2022/03/12/EKx6AJHWuqhD3BC.png"></p></li></ol><p>打开之后会提示输入密码，就是安装时设置的密码，输入密码之后，出现下图则连接成功</p><p><img src="https://s2.loli.net/2022/03/12/6XDfg4IJ9lFbtdT.png"></p><ol start="2"><li>使用Windows自带命令行（cmd）</li></ol><p>在cmd中输入<code>mysql [-h 127.0.0.1] [-P 3306] -u root -p</code></p><p>中括号中的内容可省略，即默认</p><p><strong>若使用这种方式连接MySQL，若想在任意目录下使用，则必须配置环境变量</strong></p><p>*配置环境变量</p><p>打开系统的环境变量，找打Path→编辑→新建，添加下图红框中的内容，（MySQL默认安装在C盘的Programe Files文件夹下）</p><p><img src="https://s2.loli.net/2022/03/12/XofV6vWazkJYDy8.png"></p><p><strong>到此，MySQL安装成功并可以使用了！</strong></p><h2 id="四、关系型数据库（RDBMS）"><a href="#四、关系型数据库（RDBMS）" class="headerlink" title="四、关系型数据库（RDBMS）"></a>四、关系型数据库（RDBMS）</h2><ol><li><strong>概念：</strong>建立在关系模型基础上，由多张相互连接的二维表组成的数据库。</li></ol><p>具体什么是二维表呢，参见下图</p><p><img src="https://s2.loli.net/2022/03/12/8D2hBAQ9tEcCmya.png"></p><p>通俗解释，两张表格，相互独立，又可以通过某些关系联系起来。</p><ol start="2"><li><p><strong>特点：</strong></p><ol><li><p>使用表存储数据，格式统一，便于维护</p></li><li><p>使用SQL语言操作，标准统一，使用方便</p></li></ol></li></ol><h2 id="五、数据模型"><a href="#五、数据模型" class="headerlink" title="五、数据模型"></a>五、数据模型</h2><p><img src="https://s2.loli.net/2022/03/12/PS21r5fMbReoXOW.png"></p><p>当我们安装了MySQL时，我们的计算机，便成为了MySQL数据库的服务器，我们使用客户端即可连接<strong>数据库管理系统（DBMS）</strong>，使用数据库管理系统可以创建数据库，也可以通过SQL语句来在指定的数据库中创建表来储存数据，我们可以创建多个数据库，一个数据库也可以创建多张表。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JDK配置环境变量+eclipse安装使用</title>
      <link href="/2022/03/01/jdk-pei-zhi-huan-jing-bian-liang-eclipse-an-zhuang-shi-yong/"/>
      <url>/2022/03/01/jdk-pei-zhi-huan-jing-bian-liang-eclipse-an-zhuang-shi-yong/</url>
      
        <content type="html"><![CDATA[<h2 id="一、下载JDK"><a href="#一、下载JDK" class="headerlink" title="一、下载JDK"></a>一、下载JDK</h2><ol><li>访问Oracle官网下载最新版JDK<a href="https://www.oracle.com/java/technologies/downloads/">Java Downloads | Oracle</a>，也可<a href="http://download.cikian.cn/exe/jdk-17_windows-x64_bin.exe">点击此处</a>下载（在我自己服务器，绝对安全，放心）</li></ol><p><img src="https://s2.loli.net/2022/03/12/K3A2eGBsIwQgqWH.png"></p><p>以Windows系统举例，选择Windows下的第二个（第一个为压缩包，第二个为安装程序，第三个是Windows Installee的数据包）。</p><ol start="2"><li>打开下载好的安装包。</li></ol><p><img src="https://s2.loli.net/2022/03/12/fsHTGIkiEymYeUN.png"></p><p>点击下一步。</p><p><img src="https://s2.loli.net/2022/03/12/d3ZAGW67wS8at4o.png"></p><p>选择一个安装位置。</p><p>推荐在C盘意外的盘符给java一个单独的文件夹，这里演示的安装位置为F:\XX\java\jdk-17.0.2\</p><p><img src="https://s2.loli.net/2022/03/12/MqTSFCmtkz5se1d.png"></p><p>点击确定，等待安装。</p><p><img src="https://s2.loli.net/2022/03/12/nQlOqydeWMRKLiw.png"></p><h2 id="二、配置环境变量"><a href="#二、配置环境变量" class="headerlink" title="二、配置环境变量"></a>二、配置环境变量</h2><p><strong>以win10系统为例</strong></p><ol><li>右键“此电脑”，点击属性，在弹出的窗口点击“高级系统设置”</li></ol><p><img src="https://s2.loli.net/2022/03/12/Lsmr8O1zNaEZ9YU.png"></p><p>在弹出的窗口点击“环境变量”。</p><ol start="2"><li><p>点击系统变量中的“新建”</p><p><img src="https://s2.loli.net/2022/03/12/sQfHvu3wZgL2YKR.png"></p></li><li><p>变量名输入“java_home”,变量值处点击“浏览目录”，选择到jdk安装的文件夹（显示版本号的文件夹，当然，这是在你没有改文件夹名称的情况下）</p></li></ol><p><img src="https://s2.loli.net/2022/03/12/B3g7jEdrQtuewbY.png"></p><ol start="4"><li>选中系统变量中的path，点击“编辑”</li></ol><p><img src="https://s2.loli.net/2022/03/12/2i5ThPtVX7KpYfc.png"></p><ol start="5"><li>在弹出的窗口中点击“新建”，再点击“浏览”，选择到安装jdk文件夹下的“bin”文件夹，全部窗口点击“确定”，推出</li></ol><p><img src="https://s2.loli.net/2022/03/12/7XvsK8AW2kmLG4g.png"></p><p>此时，jdk已经安装好并且已经配置好了环境变量。</p><h2 id="三、安装eclipse"><a href="#三、安装eclipse" class="headerlink" title="三、安装eclipse"></a>三、安装eclipse</h2><ol><li>访问eclipse官网<a href="https://www.eclipse.org/downloads/">Eclipse Downloads | The Eclipse Foundation</a>下载eclipse，国内访问速度比较慢，也可<a href="https://www.cikian.cn/download/eclipse-inst-jre-win64.exe">点击此处</a>下载（在我自己服务器，绝对安全，放心）</li><li>下载完成后，点击第一项“Eclipse IDE for Java Developers”</li></ol><p><img src="https://s2.loli.net/2022/03/12/fgU8au2e4cOx5WH.png"></p><ol start="3"><li>选择安装目录（第二个路径），第一个路径为JDK的安装文件夹，正常情况下默认就是正确的，不需要更改，选择好安装路径后点击“INSTALL”</li></ol><p><img src="https://s2.loli.net/2022/03/12/RSKo4N2HtdbQUuC.png"></p><ol start="4"><li>接下来会弹出一个窗口，点击同意（Accept Now）即可</li></ol><p><img src="https://s2.loli.net/2022/03/12/UGV2JpKk4DobOmj.png"></p><ol start="5"><li>由于安装过程会下载软件需要的文件，所以国内安装过程比较漫长，耐心等待即可，安装完成之后点击绿色按钮即可运行eclipse</li></ol><p><img src="https://s2.loli.net/2022/03/12/3v1Wnp85Uau6Aqx.png"></p><ol start="6"><li>运行后，欢迎页面关掉即可，eclipse安装成功！</li></ol><p><img src="https://s2.loli.net/2022/03/12/Kfl75D3raE6iXBN.png"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JDK </tag>
            
            <tag> 配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript—动画</title>
      <link href="/2022/02/15/javascript-dong-hua/"/>
      <url>/2022/02/15/javascript-dong-hua/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript—动画"><a href="#JavaScript—动画" class="headerlink" title="JavaScript—动画"></a>JavaScript—动画</h1><h2 id="一、动画原理"><a href="#一、动画原理" class="headerlink" title="一、动画原理"></a>一、动画原理</h2><p>通过定时器setInterval不断移动盒子位置。</p><p>步骤：</p><ol><li>获得盒子当前位置；</li><li>让盒子在当前位置加上1个移动距离；</li><li>利用定时器不断重复这个操作；</li><li>结束定时器。</li></ol><p>注意：元素需要加定位。</p><p>例：</p><p>HTML代码：</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>move<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>js/js.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>CSS代码：</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.move</span></span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>JS代码：</p><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.move'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取需要移动的元素</span><span class="token keyword">var</span> timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//新建一个定时器</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>div<span class="token punctuation">.</span>offsetLeft <span class="token operator">>=</span> <span class="token number">400</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//停止定时器的条件：移动距离大于等于400px时停止</span>        <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">//停止定时器</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    div<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> div<span class="token punctuation">.</span>offsetLeft <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//定时器执行的操作：每1毫秒移动一个像素</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span></code></pre><h2 id="二、简单动画函数封装"><a href="#二、简单动画函数封装" class="headerlink" title="二、简单动画函数封装"></a>二、简单动画函数封装</h2><p>注意函数需要传递的2个参数：<strong>动画对象</strong>和<strong>移动的距离</strong>。</p><pre class=" language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">animate</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span>offsetLeft <span class="token operator">>=</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        obj<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> obj<span class="token punctuation">.</span>offsetLeft <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">var</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.move'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//获取元素</span><span class="token function">animate</span><span class="token punctuation">(</span>div<span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token comment" spellcheck="true">//调用函数</span></code></pre><h2 id="三、给不同元素记录不同定时器"><a href="#三、给不同元素记录不同定时器" class="headerlink" title="三、给不同元素记录不同定时器"></a>三、给不同元素记录不同定时器</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">animate</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">clearInterval</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//一个元素同时只能存在一个定时器</span>    obj<span class="token punctuation">.</span>timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//给不同元素添加定时器</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span>offsetLeft <span class="token operator">>=</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">clearInterval</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        obj<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> obj<span class="token punctuation">.</span>offsetLeft <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h2 id="四、缓动效果原理"><a href="#四、缓动效果原理" class="headerlink" title="四、缓动效果原理"></a>四、缓动效果原理</h2><p>缓动动画就是让元素运动速度有所变化，如常见的“慢慢停下来”。</p><p>思路：</p><ol><li>让盒子每次移动的距离变小，速度就会慢下来；</li><li>核心算法：（目标值 - 现在的位置）&#x2F; 10  作为每次移动的距离步长；</li></ol><pre class=" language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">animate</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">clearInterval</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>    obj<span class="token punctuation">.</span>timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> step <span class="token operator">=</span> <span class="token punctuation">(</span>target <span class="token operator">-</span> obj<span class="token punctuation">.</span>offsetLeft<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">;</span>        step <span class="token operator">=</span> step <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">?</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>step<span class="token punctuation">)</span> <span class="token punctuation">:</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>step<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span>offsetLeft <span class="token operator">==</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">clearInterval</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        obj<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> obj<span class="token punctuation">.</span>offsetLeft <span class="token operator">+</span> step <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h2 id="五、动画函数添加回调函数"><a href="#五、动画函数添加回调函数" class="headerlink" title="五、动画函数添加回调函数"></a>五、动画函数添加回调函数</h2><p><strong>回调函数原理：</strong>函数可以作为一个参数。将这个函数作为参数传到另一个函数里面，当那个函数执行完之后，再执行传进去的这个函数，这个过程叫做<strong>回调</strong>。</p><p>回调函数写的位置：定时器结束位置。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 动画 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript—作用域</title>
      <link href="/2022/02/13/javascript-zuo-yong-yu/"/>
      <url>/2022/02/13/javascript-zuo-yong-yu/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript—作用域"><a href="#JavaScript—作用域" class="headerlink" title="JavaScript—作用域"></a>JavaScript—作用域</h1><p>通常来说，一段程序代码中所用到的名字并不总是有效和可用的，而限定这个名字的<strong>可用性的代码范围</strong>就是这个名字的<strong>作用域</strong>。作用域的使用提高了程序逻辑的局部性，增强了程序的可靠性，减少了名字冲突。</p><h2 id="一、作用域（es6之前）"><a href="#一、作用域（es6之前）" class="headerlink" title="一、作用域（es6之前）"></a>一、作用域（es6之前）</h2><h3 id="1-全局作用域"><a href="#1-全局作用域" class="headerlink" title="1.全局作用域"></a>1.全局作用域</h3><p>在整个script标签或者一个.js文件中。</p><h3 id="2-局部作用域（函数作用域）"><a href="#2-局部作用域（函数作用域）" class="headerlink" title="2.局部作用域（函数作用域）"></a>2.局部作用域（函数作用域）</h3><p>在函数内部，只在函数内部起效果和作用。</p><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">ft</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token function">ft</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>以上代码中，两个 ‘num’ 不会冲突。</p><h2 id="二、变量的作用域"><a href="#二、变量的作用域" class="headerlink" title="二、变量的作用域"></a>二、变量的作用域</h2><h3 id="1-全局变量"><a href="#1-全局变量" class="headerlink" title="1.全局变量"></a>1.全局变量</h3><p>在全局作用域下的变量。</p><p><strong>※ 在函数内部没有声明而直接赋值的变量也属于全局变量。</strong></p><h3 id="2-局部变量"><a href="#2-局部变量" class="headerlink" title="2.局部变量"></a>2.局部变量</h3><p>在局部作用域下的变量。（在函数内部的变量）</p><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> num1 <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">ft</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> num2 <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//①</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//②</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token function">ft</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num1<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">//③</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num2<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">//④</span></code></pre><p>以上代码中，’num1’ 为全局变量；’num2’ 为局部变量。①②③都可以成功输出，而④则不能成功输出，因为 ‘num2’ 为局部变量，只能在定义它的函数中使用。</p><p><strong>函数的形参也可以看作局部变量</strong></p><h3 id="3-从执行效率来看全局变量和局部变量"><a href="#3-从执行效率来看全局变量和局部变量" class="headerlink" title="3.从执行效率来看全局变量和局部变量"></a>3.从执行效率来看全局变量和局部变量</h3><ol><li>全局变量只有在浏览器关闭时才会销毁，比较占内存资源；</li><li>局部变量当我们程序执行完毕就会销毁，比较节约内存资源。</li></ol><h2 id="三、作用域链"><a href="#三、作用域链" class="headerlink" title="三、作用域链"></a>三、作用域链</h2><p>如果在函数中还有函数，那么在这个作用域中就又诞生了一个作用域。</p><p>根据在内部函数可以访问外部函数变量的这种机制，用链式查找决定哪些数据能被内部函数访问，就称作<strong>”作用域链“</strong>。</p><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>例如，在以上代码中，在函数 ‘fun’ 中使用 ‘console.log’ 输出 ‘num’ ，因为在函数 ‘fun’ 没有声明 ‘num’ 变量，所以会向“上一层”函数 ‘fn’ 中查找，即 ‘num &#x3D; 20’ ，则控制台输出 ‘20’ ；假如在函数 ‘fn’ 中也没有声明 ‘num’ 变量，则会向函数 ‘fn’ 的上一层查找，即 ‘num &#x3D; 10’ ，以此类推。<strong>（就近原则）</strong></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript—函数</title>
      <link href="/2022/02/13/javascript-han-shu/"/>
      <url>/2022/02/13/javascript-han-shu/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript—函数"><a href="#JavaScript—函数" class="headerlink" title="JavaScript—函数"></a>JavaScript—函数</h1><h2 id="一、函数的概念"><a href="#一、函数的概念" class="headerlink" title="一、函数的概念"></a>一、函数的概念</h2><p>在JS中，可能会定义非常多的相同代码或者功能相似的代码，这些代码可能需要大量重复使用。虽然for循环语句也能实现一些简单的操作，但是比较具有局限性，此时我们就可以使用JS中的函数。</p><p><strong>函数：</strong>就是封装了一段可被重复调用执行的代码块。通过此代码块可以实现大量代码的重复使用。</p><h2 id="二、函数的使用"><a href="#二、函数的使用" class="headerlink" title="二、函数的使用"></a>二、函数的使用</h2><h3 id="1-声明函数"><a href="#1-声明函数" class="headerlink" title="1.声明函数"></a>1.声明函数</h3><p>语法：</p><pre class=" language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">函数名</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 函数体</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>注意：</p><ol><li><p>function 声明函数的关键字，全部小写；</p></li><li><p>函数名一般为动词；</p></li><li><p>函数不调用不会执行</p></li></ol><h3 id="2-调用函数"><a href="#2-调用函数" class="headerlink" title="2.调用函数"></a>2.调用函数</h3><p><code>函数名( )</code></p><h2 id="三、函数的参数"><a href="#三、函数的参数" class="headerlink" title="三、函数的参数"></a>三、函数的参数</h2><ol><li><p>形参和实参   </p><pre class=" language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">函数名</span><span class="token punctuation">(</span>形参<span class="token number">1</span><span class="token punctuation">,</span>形参<span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 函数体</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token function">函数名</span><span class="token punctuation">(</span>实参<span class="token number">1</span><span class="token punctuation">,</span>实参<span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ol><li>在声明函数的小括号里面是形参（形式上的参数）</li><li>在函数调用的小括号里是实参（实际的参数）</li></ol></li><li><p>形参和实参的执行过程</p></li></ol><p>JS代码在执行时，遇到调用函数时，会将实参传递给形参，也就是说，形参相当于一个变量，用于接收实参。</p><ol start="3"><li>函数形参和实参的匹配问题    <ol><li>如果函数实参和形参的个数一致，则正常输出结果；</li><li>如果函数实参的个数多于形参的个数，多余的实参会被舍弃；</li><li>如果函数实参的个数少于形参的个数，多余的形参会被定义为undefined。</li></ol></li></ol><h2 id="四、函数的返回值-return"><a href="#四、函数的返回值-return" class="headerlink" title="四、函数的返回值 return"></a>四、函数的返回值 return</h2><ol><li><p>语法</p><pre class=" language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">函数名</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token operator">...</span>    <span class="token operator">...</span>    <span class="token keyword">return</span> 需要返回的结果；<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><ol><li>函数只是实现某种功能，最终的结果需要返回给函数的调用者函数名；</li><li>只要函数遇到return，就会把后面的结果返回给函数的调用者；</li><li>函数的调用者为<code>函数名()</code>。</li></ol></li><li><p>注意事项    </p><ol><li>return会终止函数；</li><li>return只能返回一个值或者一个数组，返回的结果是最后一个值；（针对数字型）</li><li>如果函数没有return，返回值为undefined；</li><li>return不仅针对函数，若是函数中有循环并且循环中包含return，return会终止循环并且推出函数。</li></ol></li></ol><h2 id="五、arguments的使用"><a href="#五、arguments的使用" class="headerlink" title="五、arguments的使用"></a>五、arguments的使用</h2><p>当我们不确定有多少参数传递的时候，可以用arguments来获取。在JavaScript中，arguments实际上它是当前函数的一个<strong>内置对象</strong>。所有函数都内置了一个arguments对象，arguments对象中<strong>存储了传递的所有实参</strong>。</p><ol><li>arguments以<strong>伪数组</strong>的形式存储所有实参；<ol><li>伪数组具有数组的length属性；</li><li>按照索引的方式进行存储；</li><li>没有真正数组的一些方法，如：pop( )，push ( ) 等等。</li></ol></li><li>可以按照数组的方式遍历arguments；</li><li>只有函数才有arguments对象并且每个函数已经内置了arguments对象。</li></ol><h2 id="六、函数的两种声明方式"><a href="#六、函数的两种声明方式" class="headerlink" title="六、函数的两种声明方式"></a>六、函数的两种声明方式</h2><ol><li>利用函数关键字自定义函数（命名函数）</li></ol><pre class=" language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">函数名</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 函数体</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><ol start="2"><li>函数表达式（匿名函数）</li></ol><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> 变量名 <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 函数体</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>匿名函数使用<strong>变量名</strong>调用函数。</p><hr><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><h3 id="1-利用函数计算1-100之间的累加和"><a href="#1-利用函数计算1-100之间的累加和" class="headerlink" title="1.利用函数计算1-100之间的累加和"></a>1.利用函数计算1-100之间的累加和</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 1.声明函数</span><span class="token keyword">function</span> <span class="token function">getSum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">&lt;=</span><span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        sum <span class="token operator">+</span><span class="token operator">=</span> i<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 2.调用函数</span><span class="token function">getSum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="2-利用函数求任意两数的和"><a href="#2-利用函数求任意两数的和" class="headerlink" title="2.利用函数求任意两数的和"></a>2.利用函数求任意两数的和</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">getSum</span><span class="token punctuation">(</span>num1<span class="token punctuation">,</span>num2<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> num1 <span class="token operator">+</span> num2<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getSum</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 调用函数的实参可为任意数字</span></code></pre><h3 id="3-利用函数比较两个数的大小"><a href="#3-利用函数比较两个数的大小" class="headerlink" title="3.利用函数比较两个数的大小"></a>3.利用函数比较两个数的大小</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">getMax</span><span class="token punctuation">(</span>num1<span class="token punctuation">,</span>num2<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>num1 <span class="token operator">></span> num2<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> num1<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>num1 <span class="token operator">&lt;</span> num2<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> num2<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>num1 <span class="token operator">=</span> num2<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">'两个数相等'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 也可以用三元表达式：</span>    <span class="token comment" spellcheck="true">// return num1 > num2 ? num1 : num2;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getMax</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="4-利用函数求任意一个数组中的最大值"><a href="#4-利用函数求任意一个数组中的最大值" class="headerlink" title="4.利用函数求任意一个数组中的最大值"></a>4.利用函数求任意一个数组中的最大值</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">getArrMax</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> max <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">></span> max<span class="token punctuation">)</span><span class="token punctuation">{</span>            max <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> max<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token function">getArrMax</span><span class="token punctuation">(</span>任意数组<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="5-利用函数求任意个数的数字的最大值"><a href="#5-利用函数求任意个数的数字的最大值" class="headerlink" title="5.利用函数求任意个数的数字的最大值"></a>5.利用函数求任意个数的数字的最大值</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">getMax</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> amx <span class="token operator">=</span> arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arguments<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">></span> max<span class="token punctuation">)</span><span class="token punctuation">{</span>            max <span class="token operator">=</span> arguments<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> max<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token function">getMax</span><span class="token punctuation">(</span>任意个实参<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="6-利用函数翻转任意数组"><a href="#6-利用函数翻转任意数组" class="headerlink" title="6.利用函数翻转任意数组"></a>6.利用函数翻转任意数组</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">reverse</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> newArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">>=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        newArr<span class="token punctuation">[</span>newArr<span class="token punctuation">.</span>length<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> newArr<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token function">reverse</span><span class="token punctuation">(</span>任意数组<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="7-用户输入年份，输出当年2月份天数"><a href="#7-用户输入年份，输出当年2月份天数" class="headerlink" title="7.用户输入年份，输出当年2月份天数"></a>7.用户输入年份，输出当年2月份天数</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">backDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> year <span class="token operator">=</span> <span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">'请输入年份：'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRunYear</span><span class="token punctuation">(</span>year<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">alert</span><span class="token punctuation">(</span>year <span class="token operator">+</span> <span class="token string">'年有29天。'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token function">alert</span><span class="token punctuation">(</span>year <span class="token operator">+</span> <span class="token string">'年有28天。'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">isRunYear</span><span class="token punctuation">(</span>year<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>year <span class="token operator">%</span> <span class="token number">4</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> year <span class="token operator">%</span> <span class="token number">100</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">||</span> year <span class="token operator">%</span> <span class="token number">400</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> flag<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token function">backDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript—数组</title>
      <link href="/2022/02/11/javascript-shu-zu/"/>
      <url>/2022/02/11/javascript-shu-zu/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript-数组"><a href="#JavaScript-数组" class="headerlink" title="JavaScript-数组"></a>JavaScript-数组</h1><h2 id="一、创建数组"><a href="#一、创建数组" class="headerlink" title="一、创建数组"></a>一、创建数组</h2><ol><li><strong>new</strong></li></ol><p>​        语法：</p><p>​        <code>var 数组名 = new Array();</code>       &#x2F;&#x2F;创建空数组</p><p>​        <strong>※ 注意大写的A</strong></p><ol start="2"><li><strong>利用数组字面量创建数组</strong>（常用）</li></ol><p>​        语法：</p><p>​        <code>var 数组名 = [];</code></p><p>​        利用数组字面量创建数组可以给数组赋初始值（数组初始化），数组中的元素要用逗号分隔。</p><p>​        数组中的元素可以是任意类型，比如数字型，字符型，布尔型等。</p><h2 id="二、访问数组元素"><a href="#二、访问数组元素" class="headerlink" title="二、访问数组元素"></a>二、访问数组元素</h2><ol><li><strong>数组的索引</strong></li></ol><p>​        索引（下标）：用来访问数组的序号，<strong>数组下标从0开始</strong>。</p><pre class=" language-javascript"><code class="language-javascript">    <span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'张三'</span><span class="token punctuation">,</span> <span class="token string">'李四'</span><span class="token punctuation">,</span> <span class="token string">'王五'</span><span class="token punctuation">,</span> <span class="token string">'刘六'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//索引号：   0      1      2       3</span></code></pre><p>​        例如：</p><p>​        <code>console.log(arr[1]);</code></p><p>​        将会在控制台输出：李四。</p><ol start="2"><li><strong>遍历数组</strong></li></ol><p>​        通过<strong>循环</strong>把数组中的元素从头到尾访问一次。</p><p>​        例如：</p><pre class=" language-javascript"><code class="language-javascript">    <span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'张三'</span><span class="token punctuation">,</span> <span class="token string">'李四'</span><span class="token punctuation">,</span> <span class="token string">'王五'</span><span class="token punctuation">,</span> <span class="token string">'刘六'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>​        由于数组下标从0开始，所以 i 要从0开始，因为数组下标最大为3，所以for循环的条件为i &lt; 3。</p><p>​        结果便是在控制台依次输出：张三，李四，王五，刘六。</p><h2 id="三、数组长度"><a href="#三、数组长度" class="headerlink" title="三、数组长度"></a>三、数组长度</h2><p>​        使用<code>数组名.length</code>可以访问数组的数量（数组长度）。</p><p>​        在遍历数组时，for循环的条件一般不使用明确的数组，因为当数组元素非常多时，去数元素个数是比较麻烦也是不明智的选择，而且数组中的元素可能会进行增删，数组下标也会随之变化。</p><p>​        所以在实际开发中，遍历数组时for循环的条件应改为<code>i &lt; arr.length</code>比较合适。</p><p>​        即：</p><pre class=" language-js"><code class="language-js">    <span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'张三'</span><span class="token punctuation">,</span> <span class="token string">'李四'</span><span class="token punctuation">,</span> <span class="token string">'王五'</span><span class="token punctuation">,</span> <span class="token string">'刘六'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h2 id="四、新增数组元素"><a href="#四、新增数组元素" class="headerlink" title="四、新增数组元素"></a>四、新增数组元素</h2><ol><li><strong>修改length长度。</strong></li></ol><p>​        数组length值可以获取，也可以修改，修改方法就是直接给<code>数组名.length </code>赋值。</p><p>​        例如：</p><pre class=" language-js"><code class="language-js">    <span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'张三'</span><span class="token punctuation">,</span> <span class="token string">'李四'</span><span class="token punctuation">,</span> <span class="token string">'王五'</span><span class="token punctuation">,</span> <span class="token string">'刘六'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    arr<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span></code></pre><p>​        此时，数组arr中有5个元素，当然，由于没有给第五个元素赋值，所以第五个元素为空且默认值为undefined。</p><ol start="2"><li><strong>修改数组索引号新增数组元素</strong></li></ol><p>​        例如，想在数组arr中追加一个元素“王八”：</p><pre class=" language-js"><code class="language-js">    <span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'张三'</span><span class="token punctuation">,</span> <span class="token string">'李四'</span><span class="token punctuation">,</span> <span class="token string">'王五'</span><span class="token punctuation">,</span> <span class="token string">'刘六'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    arr<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'王八'</span>；</code></pre><p>​        同时，可以通过这种方法修改已有的数组元素，例如<code>arr[1] = &#39;李九&#39;;</code>，数组中的 ‘李四’ 便被修改为 ‘李九’ 。</p><p>​        <strong>注意：</strong>如果新增或修改元素的数据类型为字符型，需要加引号；不要直接给数组名赋值，否则数组中的元素会全部被覆盖。</p><hr><h2 id="五、综合案例"><a href="#五、综合案例" class="headerlink" title="五、综合案例"></a>五、综合案例</h2><h3 id="案例1：筛选数组元素"><a href="#案例1：筛选数组元素" class="headerlink" title="案例1：筛选数组元素"></a>案例1：筛选数组元素</h3><p>将数组<code>arr = [2,0,6,1,77,0,52,0,25,7]</code>中大于10的元素筛选出来并存入一个新数组。</p><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">52</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">var</span> newArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        newArr<span class="token punctuation">[</span>newArr<span class="token punctuation">.</span>length<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h3 id="案例2：调换元素顺序"><a href="#案例2：调换元素顺序" class="headerlink" title="案例2：调换元素顺序"></a>案例2：调换元素顺序</h3><p>将数组<code>arr = [&#39;red&#39;,&#39;green&#39;,&#39;blue&#39;,&#39;pink&#39;,&#39;yellow&#39;]</code>中的内容反过来存放。</p><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'red'</span><span class="token punctuation">,</span><span class="token string">'green'</span><span class="token punctuation">,</span><span class="token string">'blue'</span><span class="token punctuation">,</span><span class="token string">'pink'</span><span class="token punctuation">,</span><span class="token string">'yellow'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">var</span> newArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    newArr<span class="token punctuation">[</span>newArr<span class="token punctuation">.</span>length<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h3 id="案例3：数组排序（冒泡排序）"><a href="#案例3：数组排序（冒泡排序）" class="headerlink" title="案例3：数组排序（冒泡排序）"></a>案例3：数组排序（冒泡排序）</h3><p>将数组<code>arr[3,5,4,1,2]</code>中的元素从小到大排序。</p><p>原理：一次比较两个元素，如果不符合排序，则将这两个元素交换位置。</p><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">></span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">var</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>            arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站分享（持续更新）</title>
      <link href="/2022/02/10/wang-zhan-fen-xiang/"/>
      <url>/2022/02/10/wang-zhan-fen-xiang/</url>
      
        <content type="html"><![CDATA[<h1 id="网站分享（持续更新）"><a href="#网站分享（持续更新）" class="headerlink" title="网站分享（持续更新）"></a>网站分享（持续更新）</h1><p>这篇文章分享一些我经常用到的网站，其中包括资源、工具等类别的网站。</p><h2 id="一、资源类"><a href="#一、资源类" class="headerlink" title="一、资源类"></a>一、资源类</h2><h3 id="1-Stocksnap"><a href="#1-Stocksnap" class="headerlink" title="1.Stocksnap"></a>1.Stocksnap</h3><p>Stocksnap是国外的一个免费图片素材库，图片质量很高，数量也很多，Stocksnap收集的图片都是来自于世界各地的优秀摄影师分享，所以图片质量很高，数量也很多，但是貌似是每天下载数量有限制。</p><p>网站国内能访问，但是访问速度非常慢，要经常使用的话建议使用一些魔法🤫</p><p><img src="https://s2.loli.net/2022/02/10/jt8qDchsU3xyI5Q.png"></p><p><strong>链接：</strong><a href="http://stocksnap.com/">StockSnap： stocksnap.com</a></p><h3 id="2-PNG-images"><a href="#2-PNG-images" class="headerlink" title="2.PNG images"></a>2.PNG images</h3><p>PNG images同样是国外的一个免费的图片素材网站，但是其中的素材全部是png格式的，网站没有。</p><p>PNG images的分类做的可以说是相当不错，几乎包括你需要的一切类目，比如animals、nature、fruit等等。</p><p>网站没有任何花里胡哨的功能，甚至没有登陆按钮（至少我现在还没发现😁），只有满屏的分类和“成千上万”的搜索标签（真的很多）。</p><p><img src="https://s2.loli.net/2022/02/10/Jo3TwIzbKAcqV5U.png"></p><p>说是图片资源，其实我认为说PNG images是一个图片元素的素材网站比较合适，因为在里面得到的素材并不是一张完整的图片，而是你搜索的元素。比如你在PNG images中搜索bird，你得到是下面这样：</p><p><img src="https://s2.loli.net/2022/02/10/KfGds1ZtyDT92kH.png"></p><p>我认为PNG images还是非常实用的，尤其是经常进行平面设计的同学，里面的素材真的非常非常多。</p><p><strong>链接：</strong><a href="http://pngimg.com/">PNG images：pngimg.com</a></p><h3 id="3-CUPCAKE"><a href="#3-CUPCAKE" class="headerlink" title="3.CUPCAKE"></a>3.CUPCAKE</h3><p>CUPCAKE和Stocksnap类似，同样来自国外，不同的是，CUPCAKE是由摄影师Jonas Wimmerström创建的，其中的图片也都是他自己拍摄的图片，图片数量比不上但是Stocksnap，但是质量也都非常不错。</p><p>我个人认为，CUPCAKE可能比Stocksnap更“纯粹”一些，真的是纯粹的免费，你不但可以下载，还可以随意修改和发布，甚至还可以作为商用。</p><p>当然，国外的网站嘛，国内虽然能访问，但是还是建议使用一些魔法，体验会更好。</p><p><img src="https://s2.loli.net/2022/02/10/LlN4QkrPnUBtf3G.png"></p><p><strong>链接：</strong><a href="https://cupcake.nilssonlee.se/">Cupcake：cupcake.nilssonlee.se</a></p><h3 id="4-站长素材"><a href="#4-站长素材" class="headerlink" title="4.站长素材"></a>4.站长素材</h3><p>国内比较老，也是大部分人都知道的一个素材网站。</p><p>站长素材的资源相对比较综合，包括高清图片，psd等格式的图片素材，还包括网页模板、脚本等素材。类目比较杂，大致分类附图：</p><p><img src="https://s2.loli.net/2022/02/10/xWQNqUetzKABlmO.png"></p><p><strong>链接：</strong><a href="https://sc.chinaz.com/">站长素材： sc.chinaz.com</a></p><h3 id="5-NavNav"><a href="#5-NavNav" class="headerlink" title="5.NavNav+"></a>5.NavNav+</h3><p>这个网站推荐给所有做前端的同学。</p><p>NavNav+是一个分享网页组件的网站，在NavNav+中你几乎可以找到你网页中所有需要用到的组件，比如按钮、加载动画、登录框等，内容质量很高，各种组件的分类也做的很好，使用也很方便。</p><p><img src="https://s2.loli.net/2022/02/10/4T9xYWoyKMmLOVd.png"></p><p>当你点开一个组件，你会得到它的HTML、CSS和JS代码，你可以直接复制使用，也可以根据需求进行一些调整，也可以在其给出的控制台进行可视化的调整。</p><p><img src="https://s2.loli.net/2022/02/10/AMjvOFwuGWeExT2.png"></p><p>网站国内可以正常访问，速度不快，但是在能接受的范围里面，不需要借助魔法。</p><p><strong>链接：</strong><a href="http://navnav.co/">NavNav+：navnav.co</a></p><h2 id="二、工具类"><a href="#二、工具类" class="headerlink" title="二、工具类"></a>二、工具类</h2><h3 id="1-removebg"><a href="#1-removebg" class="headerlink" title="1.removebg"></a>1.removebg</h3><p>removebg是一个在线的消除图片背景的网站，说白了就是抠图，网站可以免费使用，但是处理过的图片分辨率会稍微低一些，由于我用这个网站主要处理人像，所以我使用觉得影响不大。如果是强迫症患者，可以付费使用（可以但没必要，个人感觉降低的分辨率影响不大）。</p><p><img src="https://s2.loli.net/2022/02/10/ilyPAMfLwzreck7.png"></p><p>它的处理速度和质量个人认为是相当的高，基本我每次扣人像都是可以达到头发丝的精度（即使图片背景很复杂），如果你对自动扣的图片不满意，你也可以在其处理后再进行手动抠图（我从来没有手动扣过，每次处理的都非常哇塞），算法真的牛。放图给大家对比一下：</p><p>原图：</p><p><img src="https://s2.loli.net/2022/02/10/vijrK2cbxVdlA6h.png"></p><p>处理后：</p><p><img src="https://s2.loli.net/2022/02/10/q8c25VOpwEBg9FM.png"></p><p>removebg同时也有客户端，但是个人认为没有必要下载，因为客户端和网页端的功能完全相同，处理图片也没有质量上的差别，我使用过程中感受到的最大的差别是客户端处理图片的速度会稍快一些（网页端已经够快了），而且处理完成之后不需要下载，会直接将png格式的图片保存到你指定的文件夹中。</p><p><strong>链接：</strong><a href="https://www.remove.bg/zh/">remove.bg：www.remove.bg/zh</a></p><h3 id="2-SM-MS"><a href="#2-SM-MS" class="headerlink" title="2.SM.MS"></a>2.SM.MS</h3><p>sm.ms是一个可以免费使用的在线图床，搭建网站的同学应该了解图床是什么，简单科普一下：如果你的网站使用了的图片，你会将图片放在你服务器中的某个地方，对于服务器来说就是放在本地（不是你正在使用的电脑哟），如果网站中的图片比较少，那么影响并不大，如果图片少我更推荐你放在本地。但是当你的网站中有大量图片，而且这些图片你还是全部放在本地的话，那么就会产生一些问题，首先是这样非常占用服务器的存储资源，这也是主要问题，其次，大量的图片会导致你的网站加载速度会变慢。</p><p>此时有一个解决办法，就是你再买一台服务器来专门存放图片，然后你网站用到的图片从这个服务器里面调取，这个服务器就是图床。</p><p>SM.MS便是相当于这样一台服务器，你可以将图片上传到SM.MS，而SM.MS会给你生成图片的链接，你可以直接使用。</p><p><img src="https://s2.loli.net/2022/02/10/BfxFwKQ4rmR2s6t.png"></p><p>免费用户有5G的存储空间，这对于一些个人的网站是足够使用的。如果你使用一些工具将图片压缩一下再上传，5G也可以存储相当多的图片。在SM.MS调用图片加载速度个人认为还是比较快的。</p><p>SM.MS有移动端的APP，但是需要通过谷歌商店才能下载，下载需要使用魔法，但是使用不需要。如果需要安装包可以关注（微信公众号：奶茶九分糖）回复SM.MS获取。</p><p><strong>链接：</strong><a href="https://sm.ms/"> sm.ms</a></p><h3 id="3-LeanCloud"><a href="#3-LeanCloud" class="headerlink" title="3.LeanCloud"></a>3.LeanCloud</h3><p>LeanCloud是一个BssS提供商，具体什么是BaaS，了解不多，不敢乱说，详见百度：<a href="baike.baidu.com/item/BaaS/271609?fr=aladdin">BaaS</a>。</p><p><img src="https://s2.loli.net/2022/02/10/qaEwxTjtcuG6BXU.png"></p><p>我是这么理解的，可能不是很准确，如果有了解的同学，欢迎在评论区留言指正，我个人将LeanCloud是当作一个“云引擎”来使用，也可以说是一种云计算服务吧，比如评论功能，总得有个后台处理一下数据吧，比如本篇文章下面的评论系统和本博客的BB功能就是使用LeanCloud处理的后台数据。</p><p><img src="https://s2.loli.net/2022/02/10/cNOQ6KqhAm4gp7Y.png"></p><p><img src="https://s2.loli.net/2022/02/10/tlwg2kqBMJObao1.png"></p><p>LeanCloud分为国际版和中国版，推荐使用国际版，原因不敢多说，怕被请喝茶。</p><p><strong>链接：</strong><a href="https://www.leancloud.cn/">LeanCloud中国版：www.leancloud.cn</a>     <a href="https://leancloud.app/">LeanCloud国际版：leancloud.app</a></p><h3 id="4-Neumorphism"><a href="#4-Neumorphism" class="headerlink" title="4.Neumorphism"></a>4.Neumorphism</h3><p>Neumorphism是一个在线设计网页按钮、容器的网站，更具体的说是通过阴影来得到不同视觉效果的容器。</p><p>你可以在上面用可视化的方式调整你需要的按钮、容器的样式，可以修改颜色、大小、阴影角度、视觉效果等，并实时生成CSS代码。</p><p><img src="https://s2.loli.net/2022/02/10/VOZ9ycbuLTCa5Kq.png"></p><p><strong>链接：</strong><a href="https://neumorphism.io/">Neumorphism：neumorphism.io</a></p><h3 id="5-W3school"><a href="#5-W3school" class="headerlink" title="5.W3school"></a>5.W3school</h3><p>W3school准确来说是一个学习类的网站，之所以我将其归类到工具类，是因为我认为可以将W3school当作一个在线的手册使用，你可以随时在上面查询到HTML中某个标签或者CSS中某个属性的用法，并且还可以在线写代码，并且实时生成网页效果。</p><p>W3school中包括的Web技术比较全面，包括基本的HTML、CSS、JS以及服务器脚本和XML系列。</p><p><img src="https://s2.loli.net/2022/02/10/IJABjL14QNP5CgZ.png"></p><p><strong>链接：</strong><a href="https://www.w3school.com.cn/">w3school：www.w3school.com.cn</a></p><h3 id="6-webtor"><a href="#6-webtor" class="headerlink" title="6. webtor"></a>6. webtor</h3><p>这是一个在线解析BT和磁力链接的网站，可以在线播放或者下载。实测，好用！只需要将磁力链接复制到输入框即可。缺点：国外网站访问速度较慢，网页也不支持中文，不过并不影响使用体验，解析资源还是非常快的。</p><p><img src="https://s2.loli.net/2022/05/21/MkmG6CtcNjxsPaZ.png"></p><p><strong>链接：</strong><a href="https://webtor.io/#/">Webtor</a></p><hr><hr><hr><p>（本篇文章持续更新）</p><p>（本篇文章所用图片和部分内容来源于网络，如有侵权，请联系我，我将在第一时间删除侵权内容，感谢！）</p>]]></content>
      
      
      <categories>
          
          <category> 分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
            <tag> 资源 </tag>
            
            <tag> 工具 </tag>
            
            <tag> 推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown语法</title>
      <link href="/2022/02/06/markdown-yu-fa/"/>
      <url>/2022/02/06/markdown-yu-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="MarkDown语法"><a href="#MarkDown语法" class="headerlink" title="MarkDown语法"></a>MarkDown语法</h1><h2 id="一、标题"><a href="#一、标题" class="headerlink" title="一、标题"></a>一、标题</h2><ol><li>#              一级标题</li><li>##           二级标题</li><li>###         三级标题</li><li>####       四级标题</li><li>#####    五级标题</li><li>######  六级标题</li></ol><p>tips：大纲中一级标题中包含二级标题，二级标题包含三级标题，….，#后需要加空格。</p><h2 id="二、强调语法"><a href="#二、强调语法" class="headerlink" title="二、强调语法"></a>二、强调语法</h2><ol><li>斜体：*  *</li><li>加粗：**  **</li><li>倾斜加粗：***  ***</li><li>删除线：~~  ~~</li></ol><p>tips：符号与文字间不需要加空格。</p><p><strong>示例：</strong></p><p>代码：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token italic"><span class="token punctuation">*</span>斜体<span class="token punctuation">*</span></span></code></pre><pre class=" language-markdown"><code class="language-markdown"> <span class="token bold"><span class="token punctuation">**</span>加粗<span class="token punctuation">**</span></span></code></pre><pre class=" language-markdown"><code class="language-markdown"><span class="token bold"><span class="token punctuation">**</span>*倾斜加粗<span class="token punctuation">**</span></span>*</code></pre><pre class=" language-markdown"><code class="language-markdown">~~删除线~~</code></pre><p>显示效果：</p><p><em>斜体</em></p><p> <strong>加粗</strong></p><p><em><strong>倾斜加粗</strong></em></p><p><del>删除线</del></p><h2 id="三、分割线"><a href="#三、分割线" class="headerlink" title="三、分割线"></a>三、分割线</h2><ol><li>***</li><li>---</li></ol><p>tips：在一行中使用三个以上的 * 或者 - 来创建一条分割线，此行中不可有其他内容。</p><h2 id="四、引用"><a href="#四、引用" class="headerlink" title="四、引用"></a>四、引用</h2><p>在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;。</p><p><strong>示例：</strong></p><p>代码：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span> 引用的文字<span class="token blockquote punctuation">> ></span> 引用的文字<span class="token blockquote punctuation">> > ></span> 引用的文字</code></pre><p>显示效果：</p><blockquote><p>引用的文字</p><blockquote><p>引用的文字</p><blockquote><p>引用的文字</p></blockquote></blockquote></blockquote><h2 id="五、图片"><a href="#五、图片" class="headerlink" title="五、图片"></a>五、图片</h2><p>![ 图片的alt](图片的路径 &quot;图片的title&quot;)</p><p>tips：alt为图片不能正常显示时页面显示的文字，title为鼠标移动到图片上显示的文字，路径可以为网络地址，也可以为本地图片，可以使用相对路径和绝对路径。</p><p><strong>示例：</strong></p><p>​        代码：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token url">![logo](../imgs/logo.png)</span></code></pre><p>​        显示效果：</p><p><img src="http://img.cikian.cn/blog-img/logo.png"></p><h2 id="六、超链接"><a href="#六、超链接" class="headerlink" title="六、超链接"></a>六、超链接</h2><p>[超链接名](地址 <a href="http://xxx.xxx.xxx/">http://xxx.xxx.xxx\</a>)</p><p><strong>示例：</strong></p><p>代码：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token url">[Cikian的Github](https://github.com/Cikian)</span></code></pre><p>显示效果：</p><p><a href="https://github.com/Cikian">Cikian的Github</a></p><p>tips：MarkDown本身语法不支持链接在新页面打开，如果想要在新页面打开，可以使用html的a标签代替。</p><h2 id="七、列表"><a href="#七、列表" class="headerlink" title="七、列表"></a>七、列表</h2><h3 id="1-无序列表"><a href="#1-无序列表" class="headerlink" title="1.无序列表"></a>1.无序列表</h3><p>无序列表使用 - + *任何一种都可以</p><p>- 列表内容</p><p>+ 列表内容</p><p>* 列表内容</p><p><strong>示例：</strong></p><p>代码：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">*</span> 列表内容<span class="token list punctuation">*</span> 列表内容<span class="token list punctuation">*</span> 列表内容</code></pre><p>显示效果：</p><ul><li>列表内容</li><li>列表内容</li><li>列表内容</li></ul><h3 id="2-有序列表"><a href="#2-有序列表" class="headerlink" title="2.有序列表"></a>2.有序列表</h3><p>有序列表使用数字加英文的句点.</p><p>1. 列表内容</p><p>2. 列表内容</p><p>3. 列表内容</p><p><strong>示例：</strong></p><p>代码：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">1.</span> 列表内容<span class="token list punctuation">2.</span> 列表内容<span class="token list punctuation">3.</span> 列表内容</code></pre><p>显示效果：</p><ol><li>列表内容</li><li>列表内容</li><li>列表内容</li></ol><h3 id="3-列表的嵌套"><a href="#3-列表的嵌套" class="headerlink" title="3.列表的嵌套"></a>3.列表的嵌套</h3><p>上一级和下一级之间敲三个空格即可</p><p><strong>示例：</strong></p><p>代码：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">*</span> 一级无序列表  <span class="token list punctuation">*</span> 二级无序列表  <span class="token list punctuation">*</span> 二级无序列表<span class="token list punctuation">*</span> 一级无序列表    <span class="token list punctuation">*</span> 二级无序列表  <span class="token list punctuation">*</span> 二级无序列表</code></pre><p>显示效果：</p><ul><li>一级无序列表<ul><li>二级无序列表</li><li>二级无序列表</li></ul></li><li>一级无序列表  <ul><li>二级无序列表</li><li>二级无序列表</li></ul></li></ul><h2 id="八、表格"><a href="#八、表格" class="headerlink" title="八、表格"></a>八、表格</h2><p>| 表头| 表头| 表头|<br>| —- | :—-: | —-: |<br>| 内容 | 内容 | 内容 |<br>| 内容 | 内容 | 内容 |<br>| 内容 | 内容 | 内容 |</p><p><strong>示例：</strong></p><pre class=" language-markdown"><code class="language-markdown">| 表头 | 表头 | 表头 || ---- | :----: | ----: || 内容 | 内容 | 内容 || 内容 | 内容 | 内容 || 内容 | 内容 | 内容 |</code></pre><p>显示效果：</p><table><thead><tr><th>表头</th><th align="center">表头</th><th align="right">表头</th></tr></thead><tbody><tr><td>内容</td><td align="center">内容</td><td align="right">内容</td></tr><tr><td>内容</td><td align="center">内容</td><td align="right">内容</td></tr><tr><td>内容</td><td align="center">内容</td><td align="right">内容</td></tr></tbody></table><p>tips：文字默认左对齐，两边加：表示居中，右边加：表示右对齐。</p><h2 id="九、代码"><a href="#九、代码" class="headerlink" title="九、代码"></a>九、代码</h2><ol><li>单行代码，代码用一个反引号包起来。</li><li>多行代码，代码之间分别用三个反引号包起来，且两边的反引号单独占一行。</li></ol><p><strong>示例：</strong></p><ol><li><p>单行代码：</p><p>代码：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token code keyword">`int a,b,c;`</span></code></pre><p>显示效果：</p><p><code>int a,b,c;</code></p></li><li><p>代码块：</p><p>代码：</p><pre class=" language-markdown"><code class="language-markdown">```if (a&lt;=5){<span class="token code keyword">    console.log('代码块示例。')</span>};```</code></pre><p>显示效果：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token operator">&lt;=</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'代码块示例。'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MarkDown </tag>
            
            <tag> 语法 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
